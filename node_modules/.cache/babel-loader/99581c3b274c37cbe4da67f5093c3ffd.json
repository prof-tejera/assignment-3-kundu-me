{"ast":null,"code":"var _jsxFileName = \"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/Tabata.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef, useContext } from 'react';\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TextInput from \"../generic/TextInput\";\nimport DisplayRound from \"../generic/DisplayRound\";\nimport Button from \"../generic/Button\";\nimport Numbers from \"../generic/Numbers\";\nimport Controls from \"../generic/Controls\";\nimport { TimerContext } from \"../../AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tabata = _ref => {\n  _s();\n\n  let {\n    controls,\n    index\n  } = _ref;\n  const [description, setDescription] = useState('');\n  const [currentRound, setCurrentRound] = useState(0);\n  const [totalRound, setTotalRound] = useState(0);\n  const [countdown, setCountdown] = useState(0);\n  const [totalcountdown, setTotalCountdown] = useState(0);\n  const [restdown, setRestdown] = useState(0);\n  const [totalrestdown, setTotalRestdown] = useState(0);\n  const [start, setStart] = useState(false);\n  const [pause, setPause] = useState(false);\n  const [stop, setStop] = useState(false);\n  const [pauseButtonValue, setPauseButtonValue] = useState('Pause');\n  const [inputType, setInputType] = useState('');\n  const [inputTypeClassName, setInputTypeClassName] = useState({\n    Countdown: 'btn btn-info',\n    Restdown: 'btn btn-info',\n    Round: 'btn btn-info'\n  });\n  const [countdownValue, setCountdownValue] = useState(0);\n  const [restdownValue, setRestdownValue] = useState(0);\n  const [roundValue, setRoundValue] = useState(0);\n  const [timersReloaded, setTimersReloaded] = useState(false);\n  useEffect(() => {\n    if (timersReloaded === false) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n\n      if (localStorageTimerConfig[index]) {\n        if (localStorageTimerConfig[index].description) {\n          setDescription(localStorageTimerConfig[index].description);\n        }\n\n        if (localStorageTimerConfig[index].countdownValue) {\n          setCountdownValue(localStorageTimerConfig[index].countdownValue);\n        }\n\n        if (localStorageTimerConfig[index].restdownValue) {\n          setRestdownValue(localStorageTimerConfig[index].restdownValue);\n        }\n\n        if (localStorageTimerConfig[index].roundValue) {\n          setRoundValue(localStorageTimerConfig[index].roundValue);\n        }\n      }\n\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n\n      if (localStorageTimerState[index]) {\n        if (localStorageTimerState[index].currentRound !== undefined) {\n          setCurrentRound(localStorageTimerState[index].currentRound);\n        }\n\n        if (localStorageTimerState[index].totalRound !== undefined) {\n          setTotalRound(localStorageTimerState[index].totalRound);\n        }\n\n        if (localStorageTimerState[index].countdown !== undefined) {\n          setCountdown(localStorageTimerState[index].countdown);\n        }\n\n        if (localStorageTimerState[index].totalcountdown !== undefined) {\n          setTotalCountdown(localStorageTimerState[index].totalcountdown);\n        }\n\n        if (localStorageTimerState[index].restdown !== undefined) {\n          setRestdown(localStorageTimerState[index].restdown);\n        }\n\n        if (localStorageTimerState[index].totalrestdown !== undefined) {\n          setTotalRestdown(localStorageTimerState[index].totalrestdown);\n        }\n\n        if (localStorageTimerState[index].start !== undefined) {\n          setStart(localStorageTimerState[index].start);\n        }\n\n        if (localStorageTimerState[index].stop !== undefined) {\n          setStop(localStorageTimerState[index].stop);\n        }\n\n        if (localStorageTimerState[index].pause !== undefined) {\n          setPause(localStorageTimerState[index].pause);\n        }\n      }\n\n      setTimersReloaded(true);\n    }\n  }, [timersReloaded]);\n  useEffect(() => {\n    if (timersReloaded) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      localStorageTimerConfig[index] = {\n        description: description,\n        countdownValue: countdownValue,\n        restdownValue: restdownValue,\n        roundValue: roundValue,\n        totalTime: (countdownValue + restdownValue) * roundValue\n      };\n      localStorage.setItem('nkunduapp-timers-config', JSON.stringify(localStorageTimerConfig));\n      appNotify('timervalueupdated', {\n        index: index\n      });\n    }\n  }, [description, countdownValue, restdownValue, roundValue]);\n  useEffect(() => {\n    if (!stop && !pause) {\n      if (countdown > 0) {\n        setTimeout(() => {\n          setCountdown(countdown - 1);\n\n          if (countdown % 999 === 0) {\n            saveTimerState();\n          }\n        }, 1);\n      } else if (restdown > 0) {\n        setTimeout(() => {\n          setRestdown(restdown - 1);\n\n          if (restdown % 999 === 0) {\n            saveTimerState();\n          }\n        }, 1);\n      } else if (countdown === 0 && restdown === 0 && currentRound < totalRound) {\n        setCurrentRound(currentRound + 1);\n        setCountdown(totalcountdown);\n        setRestdown(totalrestdown);\n\n        if (countdown % 999 === 0) {\n          saveTimerState();\n        }\n\n        if (restdown % 999 === 0) {\n          saveTimerState();\n        }\n      }\n    } else if (stop) {\n      setCountdown(0);\n      setRestdown(0);\n      setCurrentRound(0);\n      saveTimerState();\n    }\n  }, [countdown, restdown, currentRound, start, pause, stop]);\n\n  const saveTimerState = () => {\n    if (timersReloaded) {\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      localStorageTimerState[index] = {\n        countdown: countdown,\n        restdown: restdown,\n        currentRound: currentRound,\n        start: start,\n        pause: pause,\n        stop: stop\n      };\n      localStorage.setItem('nkunduapp-timers-state', JSON.stringify(localStorageTimerState));\n      appNotify('timervalueupdated', {\n        index: index\n      });\n    }\n  };\n\n  const {\n    appControl,\n    appNotify,\n    appTimerAction,\n    appTimerIndex\n  } = useContext(TimerContext);\n  useEffect(() => {\n    if (appTimerAction === 'Reset') {\n      handleTabataClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    } else if (appTimerIndex === index) {\n      handleTabataClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    }\n  }, [appTimerAction, appTimerIndex]);\n  useEffect(() => {\n    if (countdown === 1 && restdown === 1 && currentRound === totalRound) {\n      appControl('Next');\n    }\n  }, [countdown, restdown, currentRound]);\n\n  const handleTabataClick = event => {\n    let value = event.target.value;\n\n    if (value === 'Reset') {\n      setInputType('');\n      setCountdownValue(0);\n      setRestdownValue(0);\n      setRoundValue(0);\n      setCountdown(0);\n      setTotalCountdown(0);\n      setRestdown(0);\n      setTotalRestdown(0);\n      setCurrentRound(0);\n      setTotalRound(0);\n      setStart(false);\n      setStop(true);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Start') {\n      setCountdown(0);\n      setTotalCountdown(countdownValue);\n      setRestdown(0);\n      setTotalRestdown(restdownValue);\n      setCurrentRound(0);\n      setTotalRound(roundValue);\n      setStart(true);\n      setStop(false);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Stop') {\n      setStop(true);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Pause') {\n      setPause(true);\n      setPauseButtonValue('Resume');\n    } else if (value === 'Resume') {\n      setPause(false);\n      setPauseButtonValue('Pause');\n    } else {// Error\n    }\n  };\n\n  const handleNumberClick = event => {\n    if (inputType === 'Round') {\n      setRoundValue(Number(event.target.value));\n    } else if (inputType === 'Countdown') {\n      setCountdownValue(countdownValue * 10 + Number(event.target.value));\n    } else {\n      setRestdownValue(restdownValue * 10 + Number(event.target.value));\n    }\n  };\n\n  const handleInputTypeClick = event => {\n    setInputType(event.target.value);\n    let objInputTypeClassName = {\n      Countdown: 'btn btn-info',\n      Restdown: 'btn btn-info',\n      Round: 'btn btn-info'\n    };\n    objInputTypeClassName[event.target.value] = \"btn btn-primary\";\n    setInputTypeClassName(objInputTypeClassName);\n  };\n\n  const handleOnChangeDescription = event => {\n    setDescription(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextInput, {\n        value: description,\n        onChange: handleOnChangeDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DisplayTime, {\n        milliseconds: countdown,\n        uservalue: countdownValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayTime, {\n        milliseconds: restdown,\n        uservalue: restdownValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayRound, {\n        round: currentRound,\n        total: totalRound,\n        uservalue: roundValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        displayName: \"Countdown\",\n        value: \"Countdown\",\n        className: inputTypeClassName.Countdown,\n        onClick: handleInputTypeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        displayName: \"Restdown\",\n        value: \"Restdown\",\n        className: inputTypeClassName.Restdown,\n        onClick: handleInputTypeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        displayName: \"Round\",\n        value: \"Round\",\n        className: inputTypeClassName.Round,\n        onClick: handleInputTypeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Numbers, {\n        onClick: handleNumberClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: controls === false ? null : /*#__PURE__*/_jsxDEV(Controls, {\n        onClick: handleTabataClick,\n        valueStart: \"Start\",\n        valuePause: pauseButtonValue,\n        valueStop: \"Stop\",\n        valueReset: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tabata, \"rQaNnvrRhhHEV97vlTkwmBYnzDk=\");\n\n_c = Tabata;\nexport default Tabata;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabata\");","map":{"version":3,"names":["useState","useEffect","useRef","useContext","DisplayTime","TextInput","DisplayRound","Button","Numbers","Controls","TimerContext","Tabata","controls","index","description","setDescription","currentRound","setCurrentRound","totalRound","setTotalRound","countdown","setCountdown","totalcountdown","setTotalCountdown","restdown","setRestdown","totalrestdown","setTotalRestdown","start","setStart","pause","setPause","stop","setStop","pauseButtonValue","setPauseButtonValue","inputType","setInputType","inputTypeClassName","setInputTypeClassName","Countdown","Restdown","Round","countdownValue","setCountdownValue","restdownValue","setRestdownValue","roundValue","setRoundValue","timersReloaded","setTimersReloaded","localStorageTimerConfig","localStorage","getItem","JSON","parse","localStorageTimerState","undefined","totalTime","setItem","stringify","appNotify","setTimeout","saveTimerState","appControl","appTimerAction","appTimerIndex","handleTabataClick","target","value","event","handleNumberClick","Number","handleInputTypeClick","objInputTypeClassName","handleOnChangeDescription","display"],"sources":["/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/Tabata.js"],"sourcesContent":["import { useState, useEffect, useRef, useContext } from 'react';\n\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TextInput from \"../generic/TextInput\";\nimport DisplayRound from \"../generic/DisplayRound\";\nimport Button from \"../generic/Button\";\nimport Numbers from \"../generic/Numbers\";\nimport Controls from \"../generic/Controls\";\n\nimport { TimerContext } from \"../../AppContext\";\n\nconst Tabata = ({controls, index}) => {\n  const [description, setDescription] = useState('');\n\n  const [currentRound, setCurrentRound] = useState(0);\n  const [totalRound, setTotalRound] = useState(0);\n  const [countdown, setCountdown] = useState(0);\n  const [totalcountdown, setTotalCountdown] = useState(0);\n  const [restdown, setRestdown] = useState(0);\n  const [totalrestdown, setTotalRestdown] = useState(0);\n\n  const [start, setStart] = useState(false);\n  const [pause, setPause] = useState(false);\n  const [stop, setStop] = useState(false);\n\n  const [pauseButtonValue, setPauseButtonValue] = useState('Pause');\n\n  const [inputType, setInputType] = useState('');\n  const [inputTypeClassName, setInputTypeClassName] = useState({\n    Countdown: 'btn btn-info',\n    Restdown: 'btn btn-info',\n    Round: 'btn btn-info'\n  });\n  const [countdownValue, setCountdownValue] = useState(0);\n  const [restdownValue, setRestdownValue] = useState(0);\n  const [roundValue, setRoundValue] = useState(0);\n\n  const [timersReloaded, setTimersReloaded] = useState(false);\n  useEffect(() => {\n    if (timersReloaded === false) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      if (localStorageTimerConfig[index]) {\n        if (localStorageTimerConfig[index].description) {\n          setDescription(localStorageTimerConfig[index].description);\n        }\n        if (localStorageTimerConfig[index].countdownValue) {\n          setCountdownValue(localStorageTimerConfig[index].countdownValue);\n        }\n        if (localStorageTimerConfig[index].restdownValue) {\n          setRestdownValue(localStorageTimerConfig[index].restdownValue);\n        }\n        if (localStorageTimerConfig[index].roundValue) {\n          setRoundValue(localStorageTimerConfig[index].roundValue);\n        }\n      }\n\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      if (localStorageTimerState[index]) {\n        if (localStorageTimerState[index].currentRound !== undefined) {\n          setCurrentRound(localStorageTimerState[index].currentRound);\n        }\n\n        if (localStorageTimerState[index].totalRound !== undefined) {\n          setTotalRound(localStorageTimerState[index].totalRound);\n        }\n\n        if (localStorageTimerState[index].countdown !== undefined) {\n          setCountdown(localStorageTimerState[index].countdown);\n        }\n\n        if (localStorageTimerState[index].totalcountdown !== undefined) {\n          setTotalCountdown(localStorageTimerState[index].totalcountdown);\n        }\n\n        if (localStorageTimerState[index].restdown !== undefined) {\n          setRestdown(localStorageTimerState[index].restdown);\n        }\n\n        if (localStorageTimerState[index].totalrestdown !== undefined) {\n          setTotalRestdown(localStorageTimerState[index].totalrestdown);\n        }\n\n        if (localStorageTimerState[index].start !== undefined) {\n          setStart(localStorageTimerState[index].start);\n        }\n\n        if (localStorageTimerState[index].stop !== undefined) {\n          setStop(localStorageTimerState[index].stop);\n        }\n\n        if (localStorageTimerState[index].pause !== undefined) {\n          setPause(localStorageTimerState[index].pause);\n        }\n      }\n\n      setTimersReloaded(true);\n    }\n  }, [timersReloaded]);\n\n  useEffect(() => {\n    if (timersReloaded) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      localStorageTimerConfig[index] = {\n        description: description,\n        countdownValue: countdownValue,\n        restdownValue: restdownValue,\n        roundValue: roundValue,\n        totalTime: (countdownValue + restdownValue) * roundValue\n      };\n      localStorage.setItem('nkunduapp-timers-config', JSON.stringify(localStorageTimerConfig));\n      appNotify('timervalueupdated', {index: index});\n    }\n  }, [description, countdownValue, restdownValue, roundValue]);\n\n  useEffect(() => {\n    if (!stop && !pause) {\n      if (countdown > 0) {\n        setTimeout(() => {\n          setCountdown(countdown - 1);\n          if (countdown % 999 === 0) {\n            saveTimerState();\n          }\n        }, 1);\n      } else if (restdown > 0) {\n        setTimeout(() => {\n          setRestdown(restdown - 1);\n          if (restdown % 999 === 0) {\n            saveTimerState();\n          }\n        }, 1);\n      } else if (countdown === 0 && restdown === 0 && currentRound < totalRound) {\n        setCurrentRound(currentRound + 1);\n        setCountdown(totalcountdown);\n        setRestdown(totalrestdown);\n        if (countdown % 999 === 0) {\n          saveTimerState();\n        }\n        if (restdown % 999 === 0) {\n          saveTimerState();\n        }\n      }\n    } else if (stop) {\n      setCountdown(0);\n      setRestdown(0);\n      setCurrentRound(0);\n      saveTimerState();\n    }\n\t}, [countdown, restdown, currentRound, start, pause, stop]);\n\n  const saveTimerState = () => {\n    if (timersReloaded) {\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      localStorageTimerState[index] = {\n        countdown: countdown,\n        restdown: restdown,\n        currentRound:currentRound,\n        start: start,\n        pause: pause,\n        stop: stop\n      };\n      localStorage.setItem('nkunduapp-timers-state', JSON.stringify(localStorageTimerState));\n      appNotify('timervalueupdated', {index: index});\n    }\n  }\n\n  const { appControl, appNotify, appTimerAction, appTimerIndex } = useContext(TimerContext);\n  useEffect(() => {\n    if (appTimerAction === 'Reset') {\n      handleTabataClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    } else if (appTimerIndex === index) {\n      handleTabataClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    }\n\t}, [appTimerAction, appTimerIndex]);\n\n  useEffect(() => {\n    if (countdown === 1 && restdown === 1 && currentRound === totalRound) {\n      appControl('Next');\n    }\n\t}, [countdown, restdown, currentRound]);\n\n  const handleTabataClick = (event) => {\n    let value = event.target.value;\n    if (value === 'Reset') {\n      setInputType('');\n      setCountdownValue(0);\n      setRestdownValue(0);\n      setRoundValue(0);\n      setCountdown(0);\n      setTotalCountdown(0);\n      setRestdown(0);\n      setTotalRestdown(0);\n      setCurrentRound(0);\n      setTotalRound(0);\n      setStart(false);\n      setStop(true);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Start') {\n      setCountdown(0);\n      setTotalCountdown(countdownValue);\n      setRestdown(0);\n      setTotalRestdown(restdownValue);\n      setCurrentRound(0);\n      setTotalRound(roundValue);\n      setStart(true);\n      setStop(false);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Stop') {\n      setStop(true);\n      setPauseButtonValue('Pause');\n    }  else if (value === 'Pause') {\n      setPause(true);\n      setPauseButtonValue('Resume');\n    }  else if (value === 'Resume') {\n      setPause(false);\n      setPauseButtonValue('Pause');\n    } else {\n      // Error\n    }\n  };\n\n  const handleNumberClick = (event) => {\n    if (inputType === 'Round') {\n      setRoundValue(Number(event.target.value));\n    } else if (inputType === 'Countdown') {\n      setCountdownValue((countdownValue * 10) + Number(event.target.value));\n    } else {\n      setRestdownValue((restdownValue * 10) + Number(event.target.value));\n    }\n  };\n\n  const handleInputTypeClick = (event) => {\n    setInputType(event.target.value);\n    let objInputTypeClassName = {\n      Countdown: 'btn btn-info',\n      Restdown: 'btn btn-info',\n      Round: 'btn btn-info'\n    }\n    objInputTypeClassName[event.target.value] = \"btn btn-primary\";\n    setInputTypeClassName(objInputTypeClassName);\n  };\n\n  const handleOnChangeDescription = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div>\n      <div>\n        <TextInput value={description} onChange={handleOnChangeDescription}/>\n      </div>\n      <div>\n        <DisplayTime milliseconds={countdown} uservalue={countdownValue}></DisplayTime>\n        <DisplayTime milliseconds={restdown} uservalue={restdownValue}></DisplayTime>\n        <DisplayRound round={currentRound} total={totalRound} uservalue={roundValue}></DisplayRound>\n      </div>\n      <div style={{ display: \"flex\"}}>\n        <Button displayName=\"Countdown\" value=\"Countdown\" className={inputTypeClassName.Countdown} onClick={handleInputTypeClick} />\n        <Button displayName=\"Restdown\" value=\"Restdown\" className={inputTypeClassName.Restdown} onClick={handleInputTypeClick} />\n        <Button displayName=\"Round\" value=\"Round\" className={inputTypeClassName.Round} onClick={handleInputTypeClick} />\n      </div>\n      <div style={{ display: \"flex\"}}>\n        <Numbers onClick={handleNumberClick} />\n      </div>\n      <div style={{ display: \"flex\"}}>\n        { controls === false ? null : <Controls onClick={handleTabataClick} valueStart=\"Start\" valuePause={pauseButtonValue} valueStop=\"Stop\" valueReset=\"Reset\"/> }\n      </div>\n    </div>\n  );\n};\n\nexport default Tabata;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAsCC,UAAtC,QAAwD,OAAxD;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,SAASC,YAAT,QAA6B,kBAA7B;;;AAEA,MAAMC,MAAM,GAAG,QAAuB;EAAA;;EAAA,IAAtB;IAACC,QAAD;IAAWC;EAAX,CAAsB;EACpC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;EAEA,MAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,CAAD,CAAhD;EACA,MAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,CAAD,CAA5C;EACA,MAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,CAAD,CAA1C;EACA,MAAM,CAACsB,cAAD,EAAiBC,iBAAjB,IAAsCvB,QAAQ,CAAC,CAAD,CAApD;EACA,MAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0BzB,QAAQ,CAAC,CAAD,CAAxC;EACA,MAAM,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAC,CAAD,CAAlD;EAEA,MAAM,CAAC4B,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAAC8B,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACgC,IAAD,EAAOC,OAAP,IAAkBjC,QAAQ,CAAC,KAAD,CAAhC;EAEA,MAAM,CAACkC,gBAAD,EAAmBC,mBAAnB,IAA0CnC,QAAQ,CAAC,OAAD,CAAxD;EAEA,MAAM,CAACoC,SAAD,EAAYC,YAAZ,IAA4BrC,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACsC,kBAAD,EAAqBC,qBAArB,IAA8CvC,QAAQ,CAAC;IAC3DwC,SAAS,EAAE,cADgD;IAE3DC,QAAQ,EAAE,cAFiD;IAG3DC,KAAK,EAAE;EAHoD,CAAD,CAA5D;EAKA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsC5C,QAAQ,CAAC,CAAD,CAApD;EACA,MAAM,CAAC6C,aAAD,EAAgBC,gBAAhB,IAAoC9C,QAAQ,CAAC,CAAD,CAAlD;EACA,MAAM,CAAC+C,UAAD,EAAaC,aAAb,IAA8BhD,QAAQ,CAAC,CAAD,CAA5C;EAEA,MAAM,CAACiD,cAAD,EAAiBC,iBAAjB,IAAsClD,QAAQ,CAAC,KAAD,CAApD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIgD,cAAc,KAAK,KAAvB,EAA8B;MAC5B,MAAME,uBAAuB,GAAGC,YAAY,CAACC,OAAb,CAAqB,yBAArB,IAAkDC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,yBAArB,CAAX,CAAlD,GAAgH,EAAhJ;;MACA,IAAIF,uBAAuB,CAACtC,KAAD,CAA3B,EAAoC;QAClC,IAAIsC,uBAAuB,CAACtC,KAAD,CAAvB,CAA+BC,WAAnC,EAAgD;UAC9CC,cAAc,CAACoC,uBAAuB,CAACtC,KAAD,CAAvB,CAA+BC,WAAhC,CAAd;QACD;;QACD,IAAIqC,uBAAuB,CAACtC,KAAD,CAAvB,CAA+B8B,cAAnC,EAAmD;UACjDC,iBAAiB,CAACO,uBAAuB,CAACtC,KAAD,CAAvB,CAA+B8B,cAAhC,CAAjB;QACD;;QACD,IAAIQ,uBAAuB,CAACtC,KAAD,CAAvB,CAA+BgC,aAAnC,EAAkD;UAChDC,gBAAgB,CAACK,uBAAuB,CAACtC,KAAD,CAAvB,CAA+BgC,aAAhC,CAAhB;QACD;;QACD,IAAIM,uBAAuB,CAACtC,KAAD,CAAvB,CAA+BkC,UAAnC,EAA+C;UAC7CC,aAAa,CAACG,uBAAuB,CAACtC,KAAD,CAAvB,CAA+BkC,UAAhC,CAAb;QACD;MACF;;MAED,MAAMS,sBAAsB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,wBAArB,IAAiDC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,wBAArB,CAAX,CAAjD,GAA8G,EAA7I;;MACA,IAAIG,sBAAsB,CAAC3C,KAAD,CAA1B,EAAmC;QACjC,IAAI2C,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BG,YAA9B,KAA+CyC,SAAnD,EAA8D;UAC5DxC,eAAe,CAACuC,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BG,YAA/B,CAAf;QACD;;QAED,IAAIwC,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BK,UAA9B,KAA6CuC,SAAjD,EAA4D;UAC1DtC,aAAa,CAACqC,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BK,UAA/B,CAAb;QACD;;QAED,IAAIsC,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BO,SAA9B,KAA4CqC,SAAhD,EAA2D;UACzDpC,YAAY,CAACmC,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BO,SAA/B,CAAZ;QACD;;QAED,IAAIoC,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BS,cAA9B,KAAiDmC,SAArD,EAAgE;UAC9DlC,iBAAiB,CAACiC,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BS,cAA/B,CAAjB;QACD;;QAED,IAAIkC,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BW,QAA9B,KAA2CiC,SAA/C,EAA0D;UACxDhC,WAAW,CAAC+B,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BW,QAA/B,CAAX;QACD;;QAED,IAAIgC,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8Ba,aAA9B,KAAgD+B,SAApD,EAA+D;UAC7D9B,gBAAgB,CAAC6B,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8Ba,aAA/B,CAAhB;QACD;;QAED,IAAI8B,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8Be,KAA9B,KAAwC6B,SAA5C,EAAuD;UACrD5B,QAAQ,CAAC2B,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8Be,KAA/B,CAAR;QACD;;QAED,IAAI4B,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BmB,IAA9B,KAAuCyB,SAA3C,EAAsD;UACpDxB,OAAO,CAACuB,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BmB,IAA/B,CAAP;QACD;;QAED,IAAIwB,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BiB,KAA9B,KAAwC2B,SAA5C,EAAuD;UACrD1B,QAAQ,CAACyB,sBAAsB,CAAC3C,KAAD,CAAtB,CAA8BiB,KAA/B,CAAR;QACD;MACF;;MAEDoB,iBAAiB,CAAC,IAAD,CAAjB;IACD;EACF,CA3DQ,EA2DN,CAACD,cAAD,CA3DM,CAAT;EA6DAhD,SAAS,CAAC,MAAM;IACd,IAAIgD,cAAJ,EAAoB;MAClB,MAAME,uBAAuB,GAAGC,YAAY,CAACC,OAAb,CAAqB,yBAArB,IAAkDC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,yBAArB,CAAX,CAAlD,GAAgH,EAAhJ;MACAF,uBAAuB,CAACtC,KAAD,CAAvB,GAAiC;QAC/BC,WAAW,EAAEA,WADkB;QAE/B6B,cAAc,EAAEA,cAFe;QAG/BE,aAAa,EAAEA,aAHgB;QAI/BE,UAAU,EAAEA,UAJmB;QAK/BW,SAAS,EAAE,CAACf,cAAc,GAAGE,aAAlB,IAAmCE;MALf,CAAjC;MAOAK,YAAY,CAACO,OAAb,CAAqB,yBAArB,EAAgDL,IAAI,CAACM,SAAL,CAAeT,uBAAf,CAAhD;MACAU,SAAS,CAAC,mBAAD,EAAsB;QAAChD,KAAK,EAAEA;MAAR,CAAtB,CAAT;IACD;EACF,CAbQ,EAaN,CAACC,WAAD,EAAc6B,cAAd,EAA8BE,aAA9B,EAA6CE,UAA7C,CAbM,CAAT;EAeA9C,SAAS,CAAC,MAAM;IACd,IAAI,CAAC+B,IAAD,IAAS,CAACF,KAAd,EAAqB;MACnB,IAAIV,SAAS,GAAG,CAAhB,EAAmB;QACjB0C,UAAU,CAAC,MAAM;UACfzC,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;;UACA,IAAIA,SAAS,GAAG,GAAZ,KAAoB,CAAxB,EAA2B;YACzB2C,cAAc;UACf;QACF,CALS,EAKP,CALO,CAAV;MAMD,CAPD,MAOO,IAAIvC,QAAQ,GAAG,CAAf,EAAkB;QACvBsC,UAAU,CAAC,MAAM;UACfrC,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;;UACA,IAAIA,QAAQ,GAAG,GAAX,KAAmB,CAAvB,EAA0B;YACxBuC,cAAc;UACf;QACF,CALS,EAKP,CALO,CAAV;MAMD,CAPM,MAOA,IAAI3C,SAAS,KAAK,CAAd,IAAmBI,QAAQ,KAAK,CAAhC,IAAqCR,YAAY,GAAGE,UAAxD,EAAoE;QACzED,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;QACAK,YAAY,CAACC,cAAD,CAAZ;QACAG,WAAW,CAACC,aAAD,CAAX;;QACA,IAAIN,SAAS,GAAG,GAAZ,KAAoB,CAAxB,EAA2B;UACzB2C,cAAc;QACf;;QACD,IAAIvC,QAAQ,GAAG,GAAX,KAAmB,CAAvB,EAA0B;UACxBuC,cAAc;QACf;MACF;IACF,CA1BD,MA0BO,IAAI/B,IAAJ,EAAU;MACfX,YAAY,CAAC,CAAD,CAAZ;MACAI,WAAW,CAAC,CAAD,CAAX;MACAR,eAAe,CAAC,CAAD,CAAf;MACA8C,cAAc;IACf;EACH,CAjCS,EAiCP,CAAC3C,SAAD,EAAYI,QAAZ,EAAsBR,YAAtB,EAAoCY,KAApC,EAA2CE,KAA3C,EAAkDE,IAAlD,CAjCO,CAAT;;EAmCA,MAAM+B,cAAc,GAAG,MAAM;IAC3B,IAAId,cAAJ,EAAoB;MAClB,MAAMO,sBAAsB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,wBAArB,IAAiDC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,wBAArB,CAAX,CAAjD,GAA8G,EAA7I;MACAG,sBAAsB,CAAC3C,KAAD,CAAtB,GAAgC;QAC9BO,SAAS,EAAEA,SADmB;QAE9BI,QAAQ,EAAEA,QAFoB;QAG9BR,YAAY,EAACA,YAHiB;QAI9BY,KAAK,EAAEA,KAJuB;QAK9BE,KAAK,EAAEA,KALuB;QAM9BE,IAAI,EAAEA;MANwB,CAAhC;MAQAoB,YAAY,CAACO,OAAb,CAAqB,wBAArB,EAA+CL,IAAI,CAACM,SAAL,CAAeJ,sBAAf,CAA/C;MACAK,SAAS,CAAC,mBAAD,EAAsB;QAAChD,KAAK,EAAEA;MAAR,CAAtB,CAAT;IACD;EACF,CAdD;;EAgBA,MAAM;IAAEmD,UAAF;IAAcH,SAAd;IAAyBI,cAAzB;IAAyCC;EAAzC,IAA2D/D,UAAU,CAACO,YAAD,CAA3E;EACAT,SAAS,CAAC,MAAM;IACd,IAAIgE,cAAc,KAAK,OAAvB,EAAgC;MAC9BE,iBAAiB,CAAC;QAChBC,MAAM,EAAE;UACNC,KAAK,EAAEJ;QADD;MADQ,CAAD,CAAjB;IAKD,CAND,MAMO,IAAIC,aAAa,KAAKrD,KAAtB,EAA6B;MAClCsD,iBAAiB,CAAC;QAChBC,MAAM,EAAE;UACNC,KAAK,EAAEJ;QADD;MADQ,CAAD,CAAjB;IAKD;EACH,CAdS,EAcP,CAACA,cAAD,EAAiBC,aAAjB,CAdO,CAAT;EAgBAjE,SAAS,CAAC,MAAM;IACd,IAAImB,SAAS,KAAK,CAAd,IAAmBI,QAAQ,KAAK,CAAhC,IAAqCR,YAAY,KAAKE,UAA1D,EAAsE;MACpE8C,UAAU,CAAC,MAAD,CAAV;IACD;EACH,CAJS,EAIP,CAAC5C,SAAD,EAAYI,QAAZ,EAAsBR,YAAtB,CAJO,CAAT;;EAMA,MAAMmD,iBAAiB,GAAIG,KAAD,IAAW;IACnC,IAAID,KAAK,GAAGC,KAAK,CAACF,MAAN,CAAaC,KAAzB;;IACA,IAAIA,KAAK,KAAK,OAAd,EAAuB;MACrBhC,YAAY,CAAC,EAAD,CAAZ;MACAO,iBAAiB,CAAC,CAAD,CAAjB;MACAE,gBAAgB,CAAC,CAAD,CAAhB;MACAE,aAAa,CAAC,CAAD,CAAb;MACA3B,YAAY,CAAC,CAAD,CAAZ;MACAE,iBAAiB,CAAC,CAAD,CAAjB;MACAE,WAAW,CAAC,CAAD,CAAX;MACAE,gBAAgB,CAAC,CAAD,CAAhB;MACAV,eAAe,CAAC,CAAD,CAAf;MACAE,aAAa,CAAC,CAAD,CAAb;MACAU,QAAQ,CAAC,KAAD,CAAR;MACAI,OAAO,CAAC,IAAD,CAAP;MACAE,mBAAmB,CAAC,OAAD,CAAnB;IACD,CAdD,MAcO,IAAIkC,KAAK,KAAK,OAAd,EAAuB;MAC5BhD,YAAY,CAAC,CAAD,CAAZ;MACAE,iBAAiB,CAACoB,cAAD,CAAjB;MACAlB,WAAW,CAAC,CAAD,CAAX;MACAE,gBAAgB,CAACkB,aAAD,CAAhB;MACA5B,eAAe,CAAC,CAAD,CAAf;MACAE,aAAa,CAAC4B,UAAD,CAAb;MACAlB,QAAQ,CAAC,IAAD,CAAR;MACAI,OAAO,CAAC,KAAD,CAAP;MACAE,mBAAmB,CAAC,OAAD,CAAnB;IACD,CAVM,MAUA,IAAIkC,KAAK,KAAK,MAAd,EAAsB;MAC3BpC,OAAO,CAAC,IAAD,CAAP;MACAE,mBAAmB,CAAC,OAAD,CAAnB;IACD,CAHM,MAGC,IAAIkC,KAAK,KAAK,OAAd,EAAuB;MAC7BtC,QAAQ,CAAC,IAAD,CAAR;MACAI,mBAAmB,CAAC,QAAD,CAAnB;IACD,CAHO,MAGA,IAAIkC,KAAK,KAAK,QAAd,EAAwB;MAC9BtC,QAAQ,CAAC,KAAD,CAAR;MACAI,mBAAmB,CAAC,OAAD,CAAnB;IACD,CAHO,MAGD,CACL;IACD;EACF,CAtCD;;EAwCA,MAAMoC,iBAAiB,GAAID,KAAD,IAAW;IACnC,IAAIlC,SAAS,KAAK,OAAlB,EAA2B;MACzBY,aAAa,CAACwB,MAAM,CAACF,KAAK,CAACF,MAAN,CAAaC,KAAd,CAAP,CAAb;IACD,CAFD,MAEO,IAAIjC,SAAS,KAAK,WAAlB,EAA+B;MACpCQ,iBAAiB,CAAED,cAAc,GAAG,EAAlB,GAAwB6B,MAAM,CAACF,KAAK,CAACF,MAAN,CAAaC,KAAd,CAA/B,CAAjB;IACD,CAFM,MAEA;MACLvB,gBAAgB,CAAED,aAAa,GAAG,EAAjB,GAAuB2B,MAAM,CAACF,KAAK,CAACF,MAAN,CAAaC,KAAd,CAA9B,CAAhB;IACD;EACF,CARD;;EAUA,MAAMI,oBAAoB,GAAIH,KAAD,IAAW;IACtCjC,YAAY,CAACiC,KAAK,CAACF,MAAN,CAAaC,KAAd,CAAZ;IACA,IAAIK,qBAAqB,GAAG;MAC1BlC,SAAS,EAAE,cADe;MAE1BC,QAAQ,EAAE,cAFgB;MAG1BC,KAAK,EAAE;IAHmB,CAA5B;IAKAgC,qBAAqB,CAACJ,KAAK,CAACF,MAAN,CAAaC,KAAd,CAArB,GAA4C,iBAA5C;IACA9B,qBAAqB,CAACmC,qBAAD,CAArB;EACD,CATD;;EAWA,MAAMC,yBAAyB,GAAIL,KAAD,IAAW;IAC3CvD,cAAc,CAACuD,KAAK,CAACF,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MAAA,uBACE,QAAC,SAAD;QAAW,KAAK,EAAEvD,WAAlB;QAA+B,QAAQ,EAAE6D;MAAzC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,wBACE,QAAC,WAAD;QAAa,YAAY,EAAEvD,SAA3B;QAAsC,SAAS,EAAEuB;MAAjD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,WAAD;QAAa,YAAY,EAAEnB,QAA3B;QAAqC,SAAS,EAAEqB;MAAhD;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,YAAD;QAAc,KAAK,EAAE7B,YAArB;QAAmC,KAAK,EAAEE,UAA1C;QAAsD,SAAS,EAAE6B;MAAjE;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eASE;MAAK,KAAK,EAAE;QAAE6B,OAAO,EAAE;MAAX,CAAZ;MAAA,wBACE,QAAC,MAAD;QAAQ,WAAW,EAAC,WAApB;QAAgC,KAAK,EAAC,WAAtC;QAAkD,SAAS,EAAEtC,kBAAkB,CAACE,SAAhF;QAA2F,OAAO,EAAEiC;MAApG;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAQ,WAAW,EAAC,UAApB;QAA+B,KAAK,EAAC,UAArC;QAAgD,SAAS,EAAEnC,kBAAkB,CAACG,QAA9E;QAAwF,OAAO,EAAEgC;MAAjG;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,MAAD;QAAQ,WAAW,EAAC,OAApB;QAA4B,KAAK,EAAC,OAAlC;QAA0C,SAAS,EAAEnC,kBAAkB,CAACI,KAAxE;QAA+E,OAAO,EAAE+B;MAAxF;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eAcE;MAAK,KAAK,EAAE;QAAEG,OAAO,EAAE;MAAX,CAAZ;MAAA,uBACE,QAAC,OAAD;QAAS,OAAO,EAAEL;MAAlB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAdF,eAiBE;MAAK,KAAK,EAAE;QAAEK,OAAO,EAAE;MAAX,CAAZ;MAAA,UACIhE,QAAQ,KAAK,KAAb,GAAqB,IAArB,gBAA4B,QAAC,QAAD;QAAU,OAAO,EAAEuD,iBAAnB;QAAsC,UAAU,EAAC,OAAjD;QAAyD,UAAU,EAAEjC,gBAArE;QAAuF,SAAS,EAAC,MAAjG;QAAwG,UAAU,EAAC;MAAnH;QAAA;QAAA;QAAA;MAAA;IADhC;MAAA;MAAA;MAAA;IAAA,QAjBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAzQD;;GAAMvB,M;;KAAAA,M;AA2QN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}