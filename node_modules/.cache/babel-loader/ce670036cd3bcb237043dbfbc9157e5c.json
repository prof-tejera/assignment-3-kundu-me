{"ast":null,"code":"var _jsxFileName = \"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/XY.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef, useContext } from 'react';\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TextInput from \"../generic/TextInput\";\nimport DisplayRound from \"../generic/DisplayRound\";\nimport Button from \"../generic/Button\";\nimport Numbers from \"../generic/Numbers\";\nimport Controls from \"../generic/Controls\";\nimport { TimerContext } from \"../../AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst XY = _ref => {\n  _s();\n\n  let {\n    controls,\n    index\n  } = _ref;\n  const [description, setDescription] = useState('');\n  const [currentRound, setCurrentRound] = useState(0);\n  const [totalRound, setTotalRound] = useState(0);\n  const [countdown, setCountdown] = useState(0);\n  const [totalcountdown, setTotalCountdown] = useState(0);\n  const [start, setStart] = useState(false);\n  const [pause, setPause] = useState(false);\n  const [stop, setStop] = useState(false);\n  const [pauseButtonValue, setPauseButtonValue] = useState('Pause');\n  const [inputType, setInputType] = useState('');\n  const [inputTypeClassName, setInputTypeClassName] = useState({\n    Countdown: 'btn btn-info',\n    Round: 'btn btn-info'\n  });\n  const [countdownValue, setCountdownValue] = useState(0);\n  const [roundValue, setRoundValue] = useState(0);\n  const [timersReloaded, setTimersReloaded] = useState(false);\n  useEffect(() => {\n    if (timersReloaded === false) {\n      // const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      let URLHash = decodeURI(window.location.hash.slice(1));\n      URLHash = URLHash ? JSON.parse(URLHash) : {};\n      const localStorageTimerConfig = URLHash.config ? URLHash.config : {};\n\n      if (localStorageTimerConfig[index]) {\n        if (localStorageTimerConfig[index].description) {\n          setDescription(localStorageTimerConfig[index].description);\n        }\n\n        if (localStorageTimerConfig[index].countdownValue) {\n          setCountdownValue(localStorageTimerConfig[index].countdownValue);\n        }\n\n        if (localStorageTimerConfig[index].roundValue) {\n          setRoundValue(localStorageTimerConfig[index].roundValue);\n        }\n      }\n\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n\n      if (localStorageTimerState[index]) {\n        if (localStorageTimerState[index].currentRound !== undefined) {\n          setCurrentRound(localStorageTimerState[index].currentRound);\n        }\n\n        if (localStorageTimerState[index].totalRound !== undefined) {\n          setTotalRound(localStorageTimerState[index].totalRound);\n        }\n\n        if (localStorageTimerState[index].countdown !== undefined) {\n          setCountdown(localStorageTimerState[index].countdown);\n        }\n\n        if (localStorageTimerState[index].totalcountdown !== undefined) {\n          setTotalCountdown(localStorageTimerState[index].totalcountdown);\n        }\n\n        if (localStorageTimerState[index].start !== undefined) {\n          setStart(localStorageTimerState[index].start);\n        }\n\n        if (localStorageTimerState[index].stop !== undefined) {\n          setStop(localStorageTimerState[index].stop);\n        }\n\n        if (localStorageTimerState[index].pause !== undefined) {\n          setPause(localStorageTimerState[index].pause);\n        }\n      }\n\n      setTimersReloaded(true);\n    }\n  }, [timersReloaded]);\n  useEffect(() => {\n    if (timersReloaded) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      localStorageTimerConfig[index] = {\n        description: description,\n        countdownValue: countdownValue,\n        roundValue: roundValue,\n        totalTime: countdownValue * roundValue\n      };\n      localStorage.setItem('nkunduapp-timers-config', JSON.stringify(localStorageTimerConfig));\n      let URLHash = decodeURI(window.location.hash.slice(1));\n      URLHash = URLHash ? JSON.parse(URLHash) : {};\n\n      if (!URLHash.config) {\n        URLHash.config = {};\n      }\n\n      URLHash.config[index] = {\n        description: description,\n        countdownValue: countdownValue,\n        roundValue: roundValue,\n        totalTime: countdownValue * roundValue\n      };\n      window.location.hash = `${JSON.stringify(URLHash)}`;\n    }\n\n    appNotify('timervalueupdated', {\n      index: index\n    });\n  }, [description, countdownValue, roundValue]);\n  useEffect(() => {\n    if (!stop && !pause) {\n      if (countdown > 0) {\n        setTimeout(() => {\n          setCountdown(countdown - 1);\n\n          if (countdown % 999 === 0) {\n            saveTimerState();\n          }\n        }, 1);\n      }\n\n      if (countdown === 0 && currentRound < totalRound) {\n        setCurrentRound(currentRound + 1);\n        setCountdown(totalcountdown);\n\n        if (countdown % 999 === 0) {\n          saveTimerState();\n        }\n      }\n    } else if (stop) {\n      setCountdown(0);\n      setCurrentRound(0);\n      setCountdown(0);\n      saveTimerState();\n    }\n  }, [countdown, currentRound, start, pause, stop]);\n\n  const saveTimerState = () => {\n    if (timersReloaded) {\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      localStorageTimerState[index] = {\n        currentRound: currentRound,\n        totalRound: totalRound,\n        countdown: countdown,\n        totalcountdown: totalcountdown,\n        start: start,\n        pause: pause,\n        stop: stop\n      };\n      localStorage.setItem('nkunduapp-timers-state', JSON.stringify(localStorageTimerState));\n    }\n  };\n\n  const {\n    appControl,\n    appNotify,\n    appTimerAction,\n    appTimerIndex\n  } = useContext(TimerContext);\n  useEffect(() => {\n    if (appTimerAction === 'Reset') {\n      handleXYClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    } else if (appTimerIndex === index) {\n      handleXYClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    }\n  }, [appTimerAction, appTimerIndex]);\n  useEffect(() => {\n    if (countdown === 1 && currentRound === totalRound) {\n      appControl('Next');\n    }\n  }, [countdown, currentRound]);\n\n  const handleXYClick = event => {\n    let value = event.target.value;\n\n    if (value === 'Reset') {\n      setInputType('');\n      setCountdownValue(0);\n      setRoundValue(0);\n      setCountdown(0);\n      setTotalCountdown(0);\n      setCurrentRound(0);\n      setTotalRound(0);\n      setStart(false);\n      setStop(true);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Start') {\n      setCountdown(0);\n      setTotalCountdown(countdownValue);\n      setCurrentRound(0);\n      setTotalRound(roundValue);\n      setStart(true);\n      setStop(false);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Stop') {\n      setStop(true);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Pause') {\n      setPause(true);\n      setPauseButtonValue('Resume');\n    } else if (value === 'Resume') {\n      setPause(false);\n      setPauseButtonValue('Pause');\n    } else {// Error\n    }\n  };\n\n  const handleNumberClick = event => {\n    if (inputType === 'Round') {\n      setRoundValue(Number(event.target.value));\n    } else {\n      setCountdownValue(countdownValue * 10 + Number(event.target.value));\n    }\n  };\n\n  const handleInputTypeClick = event => {\n    setInputType(event.target.value);\n    let objInputTypeClassName = {\n      Countdown: 'btn btn-info',\n      Round: 'btn btn-info'\n    };\n    objInputTypeClassName[event.target.value] = \"btn btn-primary\";\n    setInputTypeClassName(objInputTypeClassName);\n  };\n\n  const handleOnChangeDescription = event => {\n    setDescription(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextInput, {\n        value: description,\n        onChange: handleOnChangeDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DisplayTime, {\n        milliseconds: countdown,\n        uservalue: countdownValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayRound, {\n        round: currentRound,\n        total: totalRound,\n        uservalue: roundValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        displayName: \"Countdown\",\n        value: \"Countdown\",\n        className: inputTypeClassName.Countdown,\n        onClick: handleInputTypeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        displayName: \"Round\",\n        value: \"Round\",\n        className: inputTypeClassName.Round,\n        onClick: handleInputTypeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Numbers, {\n        onClick: handleNumberClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: controls === false ? null : /*#__PURE__*/_jsxDEV(Controls, {\n        onClick: handleXYClick,\n        valueStart: \"Start\",\n        valuePause: pauseButtonValue,\n        valueStop: \"Stop\",\n        valueReset: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n\n_s(XY, \"u68/P1QcxHD5m0W+jpfp1U5m7cg=\");\n\n_c = XY;\nexport default XY;\n\nvar _c;\n\n$RefreshReg$(_c, \"XY\");","map":{"version":3,"names":["useState","useEffect","useRef","useContext","DisplayTime","TextInput","DisplayRound","Button","Numbers","Controls","TimerContext","XY","controls","index","description","setDescription","currentRound","setCurrentRound","totalRound","setTotalRound","countdown","setCountdown","totalcountdown","setTotalCountdown","start","setStart","pause","setPause","stop","setStop","pauseButtonValue","setPauseButtonValue","inputType","setInputType","inputTypeClassName","setInputTypeClassName","Countdown","Round","countdownValue","setCountdownValue","roundValue","setRoundValue","timersReloaded","setTimersReloaded","URLHash","decodeURI","window","location","hash","slice","JSON","parse","localStorageTimerConfig","config","localStorageTimerState","localStorage","getItem","undefined","totalTime","setItem","stringify","appNotify","setTimeout","saveTimerState","appControl","appTimerAction","appTimerIndex","handleXYClick","target","value","event","handleNumberClick","Number","handleInputTypeClick","objInputTypeClassName","handleOnChangeDescription","display"],"sources":["/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/XY.js"],"sourcesContent":["import { useState, useEffect, useRef, useContext } from 'react';\n\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TextInput from \"../generic/TextInput\";\nimport DisplayRound from \"../generic/DisplayRound\";\nimport Button from \"../generic/Button\";\nimport Numbers from \"../generic/Numbers\";\nimport Controls from \"../generic/Controls\";\n\nimport { TimerContext } from \"../../AppContext\";\n\n\nconst XY = ({controls, index}) => {\n  const [description, setDescription] = useState('');\n\n  const [currentRound, setCurrentRound] = useState(0);\n  const [totalRound, setTotalRound] = useState(0);\n  const [countdown, setCountdown] = useState(0);\n  const [totalcountdown, setTotalCountdown] = useState(0);\n\n  const [start, setStart] = useState(false);\n  const [pause, setPause] = useState(false);\n  const [stop, setStop] = useState(false);\n\n  const [pauseButtonValue, setPauseButtonValue] = useState('Pause');\n\n  const [inputType, setInputType] = useState('');\n  const [inputTypeClassName, setInputTypeClassName] = useState({\n    Countdown: 'btn btn-info',\n    Round: 'btn btn-info'\n  });\n  const [countdownValue, setCountdownValue] = useState(0);\n  const [roundValue, setRoundValue] = useState(0);\n\n  const [timersReloaded, setTimersReloaded] = useState(false);\n  useEffect(() => {\n    if (timersReloaded === false) {\n      // const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      let URLHash = decodeURI(window.location.hash.slice(1));\n      URLHash = URLHash ? (JSON.parse(URLHash)) : {};\n      const localStorageTimerConfig = URLHash.config ? URLHash.config : {};\n      if (localStorageTimerConfig[index]) {\n        if (localStorageTimerConfig[index].description) {\n          setDescription(localStorageTimerConfig[index].description);\n        }\n        if (localStorageTimerConfig[index].countdownValue) {\n          setCountdownValue(localStorageTimerConfig[index].countdownValue);\n        }\n        if (localStorageTimerConfig[index].roundValue) {\n          setRoundValue(localStorageTimerConfig[index].roundValue);\n        }\n      }\n\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      if (localStorageTimerState[index]) {\n        if (localStorageTimerState[index].currentRound !== undefined) {\n          setCurrentRound(localStorageTimerState[index].currentRound);\n        }\n\n        if (localStorageTimerState[index].totalRound !== undefined) {\n          setTotalRound(localStorageTimerState[index].totalRound);\n        }\n\n        if (localStorageTimerState[index].countdown !== undefined) {\n          setCountdown(localStorageTimerState[index].countdown);\n        }\n\n        if (localStorageTimerState[index].totalcountdown !== undefined) {\n          setTotalCountdown(localStorageTimerState[index].totalcountdown);\n        }\n\n        if (localStorageTimerState[index].start !== undefined) {\n          setStart(localStorageTimerState[index].start);\n        }\n\n        if (localStorageTimerState[index].stop !== undefined) {\n          setStop(localStorageTimerState[index].stop);\n        }\n\n        if (localStorageTimerState[index].pause !== undefined) {\n          setPause(localStorageTimerState[index].pause);\n        }\n      }\n\n      setTimersReloaded(true);\n    }\n  }, [timersReloaded]);\n\n  useEffect(() => {\n    if (timersReloaded) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      localStorageTimerConfig[index] = {\n        description: description,\n        countdownValue: countdownValue,\n        roundValue:roundValue,\n        totalTime: countdownValue * roundValue\n      };\n      localStorage.setItem('nkunduapp-timers-config', JSON.stringify(localStorageTimerConfig));\n      let URLHash = decodeURI(window.location.hash.slice(1));\n      URLHash = URLHash ? (JSON.parse(URLHash)) : {};\n      if (!URLHash.config) {\n        URLHash.config = {};\n      }\n      URLHash.config[index] = {\n        description: description,\n        countdownValue: countdownValue,\n        roundValue:roundValue,\n        totalTime: countdownValue * roundValue\n      }\n      window.location.hash = `${JSON.stringify(URLHash)}`;\n    }\n    appNotify('timervalueupdated', {index: index});\n  }, [description, countdownValue, roundValue]);\n\n  useEffect(() => {\n    if (!stop && !pause) {\n      if (countdown > 0) {\n        setTimeout(() => {\n          setCountdown(countdown - 1);\n          if (countdown % 999 === 0) {\n            saveTimerState();\n          }\n        }, 1);\n      }\n      if (countdown === 0 && currentRound < totalRound) {\n        setCurrentRound(currentRound + 1);\n        setCountdown(totalcountdown);\n        if (countdown % 999 === 0) {\n          saveTimerState();\n        }\n      }\n    } else if (stop) {\n      setCountdown(0);\n      setCurrentRound(0);\n      setCountdown(0);\n      saveTimerState();\n    }\n\t}, [countdown, currentRound, start, pause, stop]);\n\n  const saveTimerState = () => {\n    if (timersReloaded) {\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      localStorageTimerState[index] = {\n        currentRound: currentRound,\n        totalRound: totalRound,\n        countdown: countdown,\n        totalcountdown: totalcountdown,\n        start: start,\n        pause: pause,\n        stop: stop\n      };\n      localStorage.setItem('nkunduapp-timers-state', JSON.stringify(localStorageTimerState));\n    }\n  }\n\n  const { appControl, appNotify, appTimerAction, appTimerIndex } = useContext(TimerContext);\n  useEffect(() => {\n    if (appTimerAction === 'Reset') {\n      handleXYClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    } else if (appTimerIndex === index) {\n      handleXYClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    }\n\t}, [appTimerAction, appTimerIndex]);\n\n  useEffect(() => {\n    if (countdown === 1 && currentRound === totalRound) {\n      appControl('Next');\n    }\n\t}, [countdown, currentRound]);\n\n  const handleXYClick = (event) => {\n    let value = event.target.value;\n    if (value === 'Reset') {\n      setInputType('');\n      setCountdownValue(0);\n      setRoundValue(0);\n      setCountdown(0);\n      setTotalCountdown(0);\n      setCurrentRound(0);\n      setTotalRound(0);\n      setStart(false);\n      setStop(true);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Start') {\n      setCountdown(0);\n      setTotalCountdown(countdownValue);\n      setCurrentRound(0);\n      setTotalRound(roundValue);\n      setStart(true);\n      setStop(false);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Stop') {\n      setStop(true);\n      setPauseButtonValue('Pause');\n    }  else if (value === 'Pause') {\n      setPause(true);\n      setPauseButtonValue('Resume');\n    }  else if (value === 'Resume') {\n      setPause(false);\n      setPauseButtonValue('Pause');\n    } else {\n      // Error\n    }\n  };\n\n  const handleNumberClick = (event) => {\n    if (inputType === 'Round') {\n      setRoundValue(Number(event.target.value));\n    } else {\n      setCountdownValue((countdownValue * 10) + Number(event.target.value));\n    }\n  };\n\n  const handleInputTypeClick = (event) => {\n    setInputType(event.target.value);let objInputTypeClassName = {\n      Countdown: 'btn btn-info',\n      Round: 'btn btn-info'\n    }\n    objInputTypeClassName[event.target.value] = \"btn btn-primary\";\n    setInputTypeClassName(objInputTypeClassName);\n  };\n\n  const handleOnChangeDescription = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div>\n      <div>\n        <TextInput value={description} onChange={handleOnChangeDescription}/>\n      </div>\n      <div>\n        <DisplayTime milliseconds={countdown} uservalue={countdownValue}></DisplayTime>\n        <DisplayRound round={currentRound} total={totalRound} uservalue={roundValue}></DisplayRound>\n      </div>\n      <div style={{ display: \"flex\"}}>\n        <Button displayName=\"Countdown\" value=\"Countdown\" className={inputTypeClassName.Countdown} onClick={handleInputTypeClick} />\n        <Button displayName=\"Round\" value=\"Round\" className={inputTypeClassName.Round} onClick={handleInputTypeClick} />\n      </div>\n      <div style={{ display: \"flex\"}}>\n        <Numbers onClick={handleNumberClick} />\n      </div>\n      <div style={{ display: \"flex\"}}>\n        { controls === false ? null : <Controls onClick={handleXYClick} valueStart=\"Start\" valuePause={pauseButtonValue} valueStop=\"Stop\" valueReset=\"Reset\"/> }\n      </div>\n    </div>\n  );\n};\n\nexport default XY;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}