[{"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/index.js":"1","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/App.js":"2","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/AppContext.js":"3","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/views/TimersView.js":"4","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/views/DocumentationView.js":"5","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/views/ConfigureView.js":"6","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/Countdown.js":"7","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/XY.js":"8","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/Stopwatch.js":"9","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/Tabata.js":"10","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/ConfigureTimers.js":"11","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/ConfigureTimer.js":"12","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/Controls.js":"13","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/Button.js":"14","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/documentation/DocumentComponent.js":"15","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/Loading.js":"16","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/Numbers.js":"17","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/DisplayTime.js":"18","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/DisplayRound.js":"19","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/TextInput.js":"20","/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/views/HistoryView.js":"21","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/index.js":"22","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/App.js":"23","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/AppContext.js":"24","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/views/DocumentationView.js":"25","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/views/ConfigureView.js":"26","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/views/HistoryView.js":"27","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/views/TimersView.js":"28","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/documentation/DocumentComponent.js":"29","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/ConfigureTimers.js":"30","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/Loading.js":"31","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/Controls.js":"32","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/Button.js":"33","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/ConfigureTimer.js":"34","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/XY.js":"35","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/Tabata.js":"36","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/Stopwatch.js":"37","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/Countdown.js":"38","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/TextInput.js":"39","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/DisplayTime.js":"40","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/Numbers.js":"41","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/DisplayRound.js":"42","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/DisplayTotalTime.js":"43","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/history/HistoryComponent.js":"44"},{"size":254,"mtime":1666895603724,"results":"45","hashOfConfig":"46"},{"size":1381,"mtime":1671042435199,"results":"47","hashOfConfig":"46"},{"size":5379,"mtime":1671042216316,"results":"48","hashOfConfig":"46"},{"size":1084,"mtime":1668702988494,"results":"49","hashOfConfig":"46"},{"size":941,"mtime":1666895603724,"results":"50","hashOfConfig":"46"},{"size":2115,"mtime":1670997621410,"results":"51","hashOfConfig":"46"},{"size":5472,"mtime":1670996322146,"results":"52","hashOfConfig":"46"},{"size":8013,"mtime":1670996631355,"results":"53","hashOfConfig":"46"},{"size":5742,"mtime":1670996471163,"results":"54","hashOfConfig":"46"},{"size":9543,"mtime":1670996677413,"results":"55","hashOfConfig":"46"},{"size":1318,"mtime":1670997681129,"results":"56","hashOfConfig":"46"},{"size":816,"mtime":1668735169831,"results":"57","hashOfConfig":"46"},{"size":632,"mtime":1668738177360,"results":"58","hashOfConfig":"46"},{"size":313,"mtime":1668660880723,"results":"59","hashOfConfig":"46"},{"size":1432,"mtime":1666895603723,"results":"60","hashOfConfig":"46"},{"size":1577,"mtime":1666895603723,"results":"61","hashOfConfig":"46"},{"size":1049,"mtime":1668661007210,"results":"62","hashOfConfig":"46"},{"size":1382,"mtime":1666917306497,"results":"63","hashOfConfig":"46"},{"size":397,"mtime":1666917311081,"results":"64","hashOfConfig":"46"},{"size":332,"mtime":1670995819234,"results":"65","hashOfConfig":"46"},{"size":941,"mtime":1671042409665,"results":"66","hashOfConfig":"46"},{"size":717,"mtime":1671125846914,"results":"67","hashOfConfig":"68"},{"size":1381,"mtime":1671126501796,"results":"69","hashOfConfig":"68"},{"size":8968,"mtime":1671056886142,"results":"70","hashOfConfig":"68"},{"size":941,"mtime":1666895603724,"results":"71","hashOfConfig":"68"},{"size":2317,"mtime":1671051912605,"results":"72","hashOfConfig":"68"},{"size":861,"mtime":1671055455388,"results":"73","hashOfConfig":"68"},{"size":1084,"mtime":1668702988494,"results":"74","hashOfConfig":"68"},{"size":1432,"mtime":1666895603723,"results":"75","hashOfConfig":"68"},{"size":1318,"mtime":1670997681129,"results":"76","hashOfConfig":"68"},{"size":1577,"mtime":1666895603723,"results":"77","hashOfConfig":"68"},{"size":632,"mtime":1668738177360,"results":"78","hashOfConfig":"68"},{"size":313,"mtime":1668660880723,"results":"79","hashOfConfig":"68"},{"size":816,"mtime":1668735169831,"results":"80","hashOfConfig":"68"},{"size":8124,"mtime":1671051891862,"results":"81","hashOfConfig":"68"},{"size":9727,"mtime":1671051885997,"results":"82","hashOfConfig":"68"},{"size":5892,"mtime":1671051879206,"results":"83","hashOfConfig":"68"},{"size":5570,"mtime":1671051861540,"results":"84","hashOfConfig":"68"},{"size":332,"mtime":1670995819234,"results":"85","hashOfConfig":"68"},{"size":1382,"mtime":1666917306497,"results":"86","hashOfConfig":"68"},{"size":1049,"mtime":1668661007210,"results":"87","hashOfConfig":"68"},{"size":397,"mtime":1666917311081,"results":"88","hashOfConfig":"68"},{"size":789,"mtime":1671126463498,"results":"89","hashOfConfig":"68"},{"size":1296,"mtime":1671056210678,"results":"90","hashOfConfig":"68"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ts8q64",{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},"18c0ir7",{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"157"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"157"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"157"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"157"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"157"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"157"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"157"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/index.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/App.js",["231","232"],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/AppContext.js",["233","234"],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/views/TimersView.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/views/DocumentationView.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/views/ConfigureView.js",["235","236","237"],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/Countdown.js",["238","239","240","241","242","243","244"],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/XY.js",["245","246","247","248","249","250"],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/Stopwatch.js",["251","252","253","254","255","256","257"],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/Tabata.js",["258","259","260","261","262","263"],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/ConfigureTimers.js",["264","265","266","267"],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/timers/ConfigureTimer.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/Controls.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/Button.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/documentation/DocumentComponent.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/Loading.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/Numbers.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/DisplayTime.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/DisplayRound.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/components/generic/TextInput.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/assignment-3-kundu-me/src/views/HistoryView.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/index.js",[],[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/App.js",["268","269"],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/AppContext.js",["270","271","272"],[],"import React from \"react\";\nimport { useState, useEffect, createContext } from 'react';\n\nimport Stopwatch from \"./components/timers/Stopwatch\";\nimport Countdown from \"./components/timers/Countdown\";\nimport XY from \"./components/timers/XY\";\nimport Tabata from \"./components/timers/Tabata\";\n\nexport const TimerContext = createContext({});\n\nexport const AppContext = ({children}) => {\n  const [timers, setTimers] = useState([]);\n\n  const [timersTotalTime, setTimersTotalTime] = useState(0);\n\n  const [timersChanged, setTimersChanged] = useState(0);\n\n  const [appTimerAction, setAppTimerAction] = useState('');\n  const [appTimerIndex, setAppTimerIndex] = useState(-1);\n\n  const [timersReloaded, setTimersReloaded] = useState(false);\n  useEffect(() => {\n    if (timersReloaded === false) {\n      reloadTimer();\n      setTimersReloaded(true);\n    }\n  }, [timersReloaded]);\n\n  useEffect(() => {\n    if (timersReloaded) {\n      localStorage.setItem('nkunduapp-timers', JSON.stringify(timers));\n    }\n    appNotify('timervalueupdated', {index: -1});\n  }, [timersChanged]);\n\n  const getNextValidIndex = (index) => {\n    for (let i = index + 1; i < timers.length; i++) {\n      if (timers[i].valid) {\n        return i;\n      }\n    }\n    return false;\n  };\n\n  const getPrevValidIndex = (index) => {\n    for (let i = index - 1; i >= 0; i--) {\n      if (timers[i].valid) {\n        return i;\n      }\n    }\n    return false;\n  };\n\n  const appControl = (value) => {\n    if (value === 'Reset') {\n      setAppTimerAction(value);\n    } else if (value === 'Start') {\n      appNotify('workoutstarted', {});\n      setAppTimerAction(value);\n      const appTimerNextIndex = getNextValidIndex(appTimerIndex);\n      if (appTimerNextIndex === false) {\n        setAppTimerIndex(0);\n      } else {\n        setAppTimerIndex(appTimerNextIndex);\n      }\n    } else if (value === 'Stop') {\n      setAppTimerAction(value);\n    }  else if (value === 'Pause') {\n      setAppTimerAction(value);\n    }  else if (value === 'Resume') {\n      setAppTimerAction(value);\n    }  else if (value === 'Next') {\n      setAppTimerAction('Start');\n      const appTimerNextIndex = getNextValidIndex(appTimerIndex);\n      if (appTimerNextIndex === false) {\n        setAppTimerIndex(-1);\n      } else {\n        setAppTimerIndex(appTimerNextIndex);\n      }\n    } else if (value === 'Fast') {\n      setAppTimerAction('Stop');\n      setTimeout(() => {\n        setAppTimerAction('Start');\n        const appTimerNextIndex = getNextValidIndex(appTimerIndex);\n        if (appTimerNextIndex === false) {\n          setAppTimerIndex(-1);\n        } else {\n          setAppTimerIndex(appTimerNextIndex);\n        }\n      }, 500);\n    } else {\n      // Error\n    }\n  };\n\n  const getComponentTimer = (index, title) => {\n    const componentTimer = {\n      \"Stopwatch\": <Stopwatch controls={true} index={index} />,\n      \"Countdown\": <Countdown controls={true} index={index} />,\n      \"XY\": <XY controls={true} index={index} />,\n      \"Tabata\": <Tabata controls={true} index={index} />\n    };\n    return componentTimer[title];\n  };\n\n  const reloadTimer = () => {\n    const localStorageTimers = localStorage.getItem('nkunduapp-timers') ? JSON.parse(localStorage.getItem('nkunduapp-timers')) : [];\n    console.log(localStorageTimers);\n    let queue = [];\n    localStorageTimers.forEach((localStorageTimer, index) => {\n      queue.push({\n        title: localStorageTimer.title,\n        data: null,\n        component: getComponentTimer(index, localStorageTimer.title),\n        valid: localStorageTimer.valid,\n        index: index\n      });\n    });\n    setTimers(queue);\n    setTimersChanged(timersChanged + 1);\n  }\n\n  const addTimer = (title) => {\n    let queue = timers;\n    const index = queue.length;\n\n    queue.push({\n      title: title,\n      data: null,\n      component: getComponentTimer(index, title),\n      valid: true,\n      index: index\n    });\n    setTimers(queue);\n    setTimersChanged(timersChanged + 1);\n  };\n\n  const updateTimer = (index, data) => {\n    let queue = timers;\n    queue[index].valid = true;\n    queue[index].data = data;\n    setTimers(queue);\n    setTimersChanged(timersChanged + 1);\n  };\n\n  const deleteTimer = (index) => {\n    let queue = timers;\n    queue[index].valid = false;\n    queue[index].data = null;\n    setTimers(queue);\n    setTimersChanged(timersChanged + 1);\n  };\n\n  const moveTimerUp = (index) => {\n    index = parseInt(index);\n    const index2 = getPrevValidIndex(index);\n\n    if (index2 === false) {\n      return\n    }\n\n    let queue = timers;\n\n    let q1 = queue[index];\n    let q2 = queue[index2];\n\n    q1.index = index2;\n    q2.index = index;\n\n    queue[index2] = q1;\n    queue[index] = q2;\n\n    setTimers(queue);\n    setTimersChanged(timersChanged + 1);\n  };\n\n  const moveTimerDown = (index) => {\n    index = parseInt(index);\n    const index2 = getNextValidIndex(index);\n\n    if (index2 === false) {\n      return\n    }\n\n    let queue = timers;\n\n    let q1 = queue[index];\n    let q2 = queue[index2];\n\n    q1.index = index2;\n    q2.index = index;\n\n    queue[index2] = q1;\n    queue[index] = q2;\n\n    console.log(queue);\n\n    setTimers(queue);\n    setTimersChanged(timersChanged + 1);\n  };\n\n  const appNotify = (notificationId, options) => {\n    console.log(notificationId);\n    if (notificationId === 'timervalueupdated') {\n      let totalTime = 0;\n      let queue = timers;\n      let timerconfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      queue.forEach((timer, index) => {\n        if (timer.valid) {\n          totalTime += timerconfig[index] && timerconfig[index].totalTime ? timerconfig[index].totalTime : 0;\n        }\n      });\n      setTimersTotalTime(totalTime);\n      console.log(totalTime);\n    }\n    else if (notificationId === 'workoutstarted') {\n      let timersQueue = localStorage.getItem('nkunduapp-timers') ? JSON.parse(localStorage.getItem('nkunduapp-timers')) : [];\n      let timersconfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      let timersState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      let timersHistory = localStorage.getItem('nkunduapp-timers-history') ? JSON.parse(localStorage.getItem('nkunduapp-timers-history')) : [];\n\n      let totalTime = 0;\n\n      timersHistory.push({\n        datetime: new Date(),\n        description: '',\n        totaltime: ''\n      });\n\n      timersQueue.forEach((timer, index) => {\n        if (timer.valid) {\n          let _totlaTime = timersconfig[index] && timersconfig[index].totalTime ? timersconfig[index].totalTime : 0;\n          totalTime += _totlaTime;\n          let description = \" Title: \" + timer.title + \" - Description: \" + (timersconfig[index] && timersconfig[index].description ? timersconfig[index].description : '~');\n          if (timer.title === 'Countdown') {\n            description += \" - CountdownValue: \" + (timersconfig[index] && timersconfig[index].countdownValue ? timersconfig[index].countdownValue : 0);\n          } else if (timer.title === 'Stopwatch') {\n            description += \" - StopwatchValue: \" + (timersconfig[index] && timersconfig[index].stopwatchValue ? timersconfig[index].stopwatchValue : 0);\n          } else if (timer.title === 'Tabata') {\n            description += \" - CountdownValue: \" + (timersconfig[index] && timersconfig[index].countdownValue ? timersconfig[index].countdownValue : 0);\n            description += \" - RestdownValue: \" + (timersconfig[index] && timersconfig[index].restdownValue ? timersconfig[index].restdownValue : 0);\n            description += \" - RoundValue: \" + (timersconfig[index] && timersconfig[index].roundValue ? timersconfig[index].roundValue : 0);\n          } else if (timer.title === 'XY') {\n            description += \" - CountdownValue: \" + (timersconfig[index] && timersconfig[index].countdownValue ? timersconfig[index].countdownValue : 0);\n            description += \" - RoundValue: \" + (timersconfig[index] && timersconfig[index].roundValue ? timersconfig[index].roundValue : 0);\n          }\n          timersHistory.push({\n            datetime: '',\n            description: description + \" - Total Time (ms) : \" + _totlaTime,\n            totaltime: ''\n          });\n        }\n      });\n\n      timersHistory.push({\n        datetime: '',\n        description: '',\n        totaltime: totalTime\n      });\n      localStorage.setItem('nkunduapp-timers-history', JSON.stringify(timersHistory));\n    }\n  };\n\n  return (\n      <TimerContext.Provider\n        value={{\n          timers,\n          timersTotalTime,\n          addTimer,\n          updateTimer,\n          deleteTimer,\n          moveTimerUp,\n          moveTimerDown,\n          appControl,\n          appNotify,\n          appTimerAction,\n          appTimerIndex\n        }}\n      >\n      {children}\n      </TimerContext.Provider>\n    )\n};\n\nexport default AppContext;\n","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/views/DocumentationView.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/views/ConfigureView.js",["273","274","275","276"],[],"import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { useContext, useEffect } from 'react';\nimport { TimerContext } from \"../AppContext\";\n\nimport ConfigureTimers from \"../components/timers/ConfigureTimers\";\nimport ConfigureTimer from \"../components/timers/ConfigureTimer\";\nimport Controls from \"../components/generic/Controls\"\nimport Button from \"../components/generic/Button\"\nimport DisplayTotalTime from \"../components/generic/DisplayTotalTime\";\n\nconst ConfigureView = () => {\n\n  const { timers, timersTotalTime, addTimer, updateTimer, deleteTimer, moveTimerUp, moveTimerDown, appControl, appNotify, appTimerAction } = useContext(TimerContext);\n\n  const handleTimerAdd = (event) => {\n    const timer = event.target.value;\n    const timerIndex = addTimer(timer);\n  };\n\n  const handleTimerUpdate = (event) => {\n    const timerIndex = event.target.value;\n    updateTimer(timerIndex);\n  };\n\n\n  const handleTimerDelete = (event) => {\n    const timerIndex = event.target.value;\n    deleteTimer(timerIndex);\n  };\n\n  const handleTimerMoveUp = (event) => {\n    const timerIndex = event.target.value;\n    moveTimerUp(timerIndex);\n  };\n\n  const handleTimerMoveDown = (event) => {\n    const timerIndex = event.target.value;\n    moveTimerDown(timerIndex);\n  };\n\n  const handleAppControlClick = (event) => {\n    const value = event.target.value;\n    appControl(value);\n  };\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", border: \"1px solid black\", width: 500, height: 75, textAlign: \"center\", marginBottom: 10}}>\n        <div style={{\"marginTop\": \"25px\"}}><label>Global Controls:</label></div>\n        <Controls onClick={handleAppControlClick} valueStart=\"Start\" valuePause={appTimerAction === 'Pause' ? 'Resume' : 'Pause'} valueStop=\"Stop\" valueReset=\"Reset\"/>\n        <Button displayName=\"Fast\" value=\"Fast\" className=\"btn btn-success\" onClick={handleAppControlClick} />\n      </div>\n\n      <div>\n        <DisplayTotalTime milliseconds={timersTotalTime}></DisplayTotalTime>\n      </div>\n      <ConfigureTimers timers={timers} handleTimerUpdate={handleTimerUpdate} handleTimerDelete={handleTimerDelete} handleTimerMoveUp={handleTimerMoveUp} handleTimerMoveDown={handleTimerMoveDown} />\n      <ConfigureTimer handleTimerAdd={handleTimerAdd} />\n    </div>\n  );\n};\n\nexport default ConfigureView;\n","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/views/HistoryView.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/views/TimersView.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/documentation/DocumentComponent.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/ConfigureTimers.js",["277","278","279","280"],[],"import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Stopwatch from \"./Stopwatch\";\nimport Countdown from \"./Countdown\";\nimport XY from \"./XY\";\nimport Tabata from \"./Tabata\";\nimport Button from \"../generic/Button\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Timer = styled.div`\n  border: 1px solid gray;\n  padding: 20px;\n  margin: 10px;\n  font-size: 1.5rem;\n`;\n\nconst TimerTitle = styled.div``;\n\nconst ConfigureTimers = ({timers, handleTimerUpdate, handleTimerDelete, handleTimerMoveUp, handleTimerMoveDown}) => {\n\n  return (\n    <Timers>\n      {timers.filter((e) => e.valid).map((timer) => (\n        <Timer key={`timer-${timer.title}-${timer.index}`}>\n          <TimerTitle>{timer.title}</TimerTitle>\n          {timer.component}\n          <div style={{\"display\": \"flex\"}}>\n            <Button displayName=\"Delete\" value={timer.index} className=\"btn btn-danger\" onClick={handleTimerDelete} />\n            <Button displayName=\"Move Up\" value={timer.index} className=\"btn btn-danger\" onClick={handleTimerMoveUp} />\n            <Button displayName=\"Move Down\" value={timer.index} className=\"btn btn-danger\" onClick={handleTimerMoveDown} />\n          </div>\n        </Timer>\n      ))}\n    </Timers>\n  );\n};\n\nexport default ConfigureTimers;\n","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/Loading.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/Controls.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/Button.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/ConfigureTimer.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/XY.js",["281","282","283","284","285","286"],[],"import { useState, useEffect, useRef, useContext } from 'react';\n\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TextInput from \"../generic/TextInput\";\nimport DisplayRound from \"../generic/DisplayRound\";\nimport Button from \"../generic/Button\";\nimport Numbers from \"../generic/Numbers\";\nimport Controls from \"../generic/Controls\";\n\nimport { TimerContext } from \"../../AppContext\";\n\n\nconst XY = ({controls, index}) => {\n  const [description, setDescription] = useState('');\n\n  const [currentRound, setCurrentRound] = useState(0);\n  const [totalRound, setTotalRound] = useState(0);\n  const [countdown, setCountdown] = useState(0);\n  const [totalcountdown, setTotalCountdown] = useState(0);\n\n  const [start, setStart] = useState(false);\n  const [pause, setPause] = useState(false);\n  const [stop, setStop] = useState(false);\n\n  const [pauseButtonValue, setPauseButtonValue] = useState('Pause');\n\n  const [inputType, setInputType] = useState('');\n  const [inputTypeClassName, setInputTypeClassName] = useState({\n    Countdown: 'btn btn-info',\n    Round: 'btn btn-info'\n  });\n  const [countdownValue, setCountdownValue] = useState(0);\n  const [roundValue, setRoundValue] = useState(0);\n\n  const [timersReloaded, setTimersReloaded] = useState(false);\n  useEffect(() => {\n    if (timersReloaded === false) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      if (localStorageTimerConfig[index]) {\n        if (localStorageTimerConfig[index].description) {\n          setDescription(localStorageTimerConfig[index].description);\n        }\n        if (localStorageTimerConfig[index].countdownValue) {\n          setCountdownValue(localStorageTimerConfig[index].countdownValue);\n        }\n        if (localStorageTimerConfig[index].roundValue) {\n          setRoundValue(localStorageTimerConfig[index].roundValue);\n        }\n      }\n\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      if (localStorageTimerState[index]) {\n        if (localStorageTimerState[index].currentRound !== undefined) {\n          setCurrentRound(localStorageTimerState[index].currentRound);\n        }\n\n        if (localStorageTimerState[index].totalRound !== undefined) {\n          setTotalRound(localStorageTimerState[index].totalRound);\n        }\n\n        if (localStorageTimerState[index].countdown !== undefined) {\n          setCountdown(localStorageTimerState[index].countdown);\n        }\n\n        if (localStorageTimerState[index].totalcountdown !== undefined) {\n          setTotalCountdown(localStorageTimerState[index].totalcountdown);\n        }\n\n        if (localStorageTimerState[index].start !== undefined) {\n          setStart(localStorageTimerState[index].start);\n        }\n\n        if (localStorageTimerState[index].stop !== undefined) {\n          setStop(localStorageTimerState[index].stop);\n        }\n\n        if (localStorageTimerState[index].pause !== undefined) {\n          setPause(localStorageTimerState[index].pause);\n        }\n      }\n\n      setTimersReloaded(true);\n    }\n  }, [timersReloaded]);\n\n  useEffect(() => {\n    if (timersReloaded) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      localStorageTimerConfig[index] = {\n        description: description,\n        countdownValue: countdownValue,\n        roundValue:roundValue,\n        totalTime: countdownValue * roundValue\n      };\n      localStorage.setItem('nkunduapp-timers-config', JSON.stringify(localStorageTimerConfig));\n    }\n    appNotify('timervalueupdated', {index: index});\n  }, [description, countdownValue, roundValue]);\n\n  useEffect(() => {\n    if (!stop && !pause) {\n      if (countdown > 0) {\n        setTimeout(() => {\n          setCountdown(countdown - 1);\n          if (countdown % 999 === 0) {\n            saveTimerState();\n          }\n        }, 1);\n      }\n      if (countdown === 0 && currentRound < totalRound) {\n        setCurrentRound(currentRound + 1);\n        setCountdown(totalcountdown);\n        if (countdown % 999 === 0) {\n          saveTimerState();\n        }\n      }\n    } else if (stop) {\n      setCountdown(0);\n      setCurrentRound(0);\n      setCountdown(0);\n      saveTimerState();\n    }\n\t}, [countdown, currentRound, start, pause, stop]);\n\n  const saveTimerState = () => {\n    if (timersReloaded) {\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      localStorageTimerState[index] = {\n        currentRound: currentRound,\n        totalRound: totalRound,\n        countdown: countdown,\n        totalcountdown: totalcountdown,\n        start: start,\n        pause: pause,\n        stop: stop\n      };\n      localStorage.setItem('nkunduapp-timers-state', JSON.stringify(localStorageTimerState));\n    }\n  }\n\n  const { appControl, appNotify, appTimerAction, appTimerIndex } = useContext(TimerContext);\n  useEffect(() => {\n    if (appTimerAction === 'Reset') {\n      handleXYClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    } else if (appTimerIndex === index) {\n      handleXYClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    }\n\t}, [appTimerAction, appTimerIndex]);\n\n  useEffect(() => {\n    if (countdown === 1 && currentRound === totalRound) {\n      appControl('Next');\n    }\n\t}, [countdown, currentRound]);\n\n  const handleXYClick = (event) => {\n    let value = event.target.value;\n    if (value === 'Reset') {\n      setInputType('');\n      setCountdownValue(0);\n      setRoundValue(0);\n      setCountdown(0);\n      setTotalCountdown(0);\n      setCurrentRound(0);\n      setTotalRound(0);\n      setStart(false);\n      setStop(true);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Start') {\n      setCountdown(0);\n      setTotalCountdown(countdownValue);\n      setCurrentRound(0);\n      setTotalRound(roundValue);\n      setStart(true);\n      setStop(false);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Stop') {\n      setStop(true);\n      setPauseButtonValue('Pause');\n    }  else if (value === 'Pause') {\n      setPause(true);\n      setPauseButtonValue('Resume');\n    }  else if (value === 'Resume') {\n      setPause(false);\n      setPauseButtonValue('Pause');\n    } else {\n      // Error\n    }\n  };\n\n  const handleNumberClick = (event) => {\n    if (inputType === 'Round') {\n      setRoundValue(Number(event.target.value));\n    } else {\n      setCountdownValue((countdownValue * 10) + Number(event.target.value));\n    }\n  };\n\n  const handleInputTypeClick = (event) => {\n    setInputType(event.target.value);let objInputTypeClassName = {\n      Countdown: 'btn btn-info',\n      Round: 'btn btn-info'\n    }\n    objInputTypeClassName[event.target.value] = \"btn btn-primary\";\n    setInputTypeClassName(objInputTypeClassName);\n  };\n\n  const handleOnChangeDescription = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div>\n      <div>\n        <TextInput value={description} onChange={handleOnChangeDescription}/>\n      </div>\n      <div>\n        <DisplayTime milliseconds={countdown} uservalue={countdownValue}></DisplayTime>\n        <DisplayRound round={currentRound} total={totalRound} uservalue={roundValue}></DisplayRound>\n      </div>\n      <div style={{ display: \"flex\"}}>\n        <Button displayName=\"Countdown\" value=\"Countdown\" className={inputTypeClassName.Countdown} onClick={handleInputTypeClick} />\n        <Button displayName=\"Round\" value=\"Round\" className={inputTypeClassName.Round} onClick={handleInputTypeClick} />\n      </div>\n      <div style={{ display: \"flex\"}}>\n        <Numbers onClick={handleNumberClick} />\n      </div>\n      <div style={{ display: \"flex\"}}>\n        { controls === false ? null : <Controls onClick={handleXYClick} valueStart=\"Start\" valuePause={pauseButtonValue} valueStop=\"Stop\" valueReset=\"Reset\"/> }\n      </div>\n    </div>\n  );\n};\n\nexport default XY;\n","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/Tabata.js",["287","288","289","290","291","292"],[],"import { useState, useEffect, useRef, useContext } from 'react';\n\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TextInput from \"../generic/TextInput\";\nimport DisplayRound from \"../generic/DisplayRound\";\nimport Button from \"../generic/Button\";\nimport Numbers from \"../generic/Numbers\";\nimport Controls from \"../generic/Controls\";\n\nimport { TimerContext } from \"../../AppContext\";\n\nconst Tabata = ({controls, index}) => {\n  const [description, setDescription] = useState('');\n\n  const [currentRound, setCurrentRound] = useState(0);\n  const [totalRound, setTotalRound] = useState(0);\n  const [countdown, setCountdown] = useState(0);\n  const [totalcountdown, setTotalCountdown] = useState(0);\n  const [restdown, setRestdown] = useState(0);\n  const [totalrestdown, setTotalRestdown] = useState(0);\n\n  const [start, setStart] = useState(false);\n  const [pause, setPause] = useState(false);\n  const [stop, setStop] = useState(false);\n\n  const [pauseButtonValue, setPauseButtonValue] = useState('Pause');\n\n  const [inputType, setInputType] = useState('');\n  const [inputTypeClassName, setInputTypeClassName] = useState({\n    Countdown: 'btn btn-info',\n    Restdown: 'btn btn-info',\n    Round: 'btn btn-info'\n  });\n  const [countdownValue, setCountdownValue] = useState(0);\n  const [restdownValue, setRestdownValue] = useState(0);\n  const [roundValue, setRoundValue] = useState(0);\n\n  const [timersReloaded, setTimersReloaded] = useState(false);\n  useEffect(() => {\n    if (timersReloaded === false) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      if (localStorageTimerConfig[index]) {\n        if (localStorageTimerConfig[index].description) {\n          setDescription(localStorageTimerConfig[index].description);\n        }\n        if (localStorageTimerConfig[index].countdownValue) {\n          setCountdownValue(localStorageTimerConfig[index].countdownValue);\n        }\n        if (localStorageTimerConfig[index].restdownValue) {\n          setRestdownValue(localStorageTimerConfig[index].restdownValue);\n        }\n        if (localStorageTimerConfig[index].roundValue) {\n          setRoundValue(localStorageTimerConfig[index].roundValue);\n        }\n      }\n\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      if (localStorageTimerState[index]) {\n        if (localStorageTimerState[index].currentRound !== undefined) {\n          setCurrentRound(localStorageTimerState[index].currentRound);\n        }\n\n        if (localStorageTimerState[index].totalRound !== undefined) {\n          setTotalRound(localStorageTimerState[index].totalRound);\n        }\n\n        if (localStorageTimerState[index].countdown !== undefined) {\n          setCountdown(localStorageTimerState[index].countdown);\n        }\n\n        if (localStorageTimerState[index].totalcountdown !== undefined) {\n          setTotalCountdown(localStorageTimerState[index].totalcountdown);\n        }\n\n        if (localStorageTimerState[index].restdown !== undefined) {\n          setRestdown(localStorageTimerState[index].restdown);\n        }\n\n        if (localStorageTimerState[index].totalrestdown !== undefined) {\n          setTotalRestdown(localStorageTimerState[index].totalrestdown);\n        }\n\n        if (localStorageTimerState[index].start !== undefined) {\n          setStart(localStorageTimerState[index].start);\n        }\n\n        if (localStorageTimerState[index].stop !== undefined) {\n          setStop(localStorageTimerState[index].stop);\n        }\n\n        if (localStorageTimerState[index].pause !== undefined) {\n          setPause(localStorageTimerState[index].pause);\n        }\n      }\n\n      setTimersReloaded(true);\n    }\n  }, [timersReloaded]);\n\n  useEffect(() => {\n    if (timersReloaded) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      localStorageTimerConfig[index] = {\n        description: description,\n        countdownValue: countdownValue,\n        restdownValue: restdownValue,\n        roundValue: roundValue,\n        totalTime: (countdownValue + restdownValue) * roundValue\n      };\n      localStorage.setItem('nkunduapp-timers-config', JSON.stringify(localStorageTimerConfig));\n    }\n    appNotify('timervalueupdated', {index: index});\n  }, [description, countdownValue, restdownValue, roundValue]);\n\n  useEffect(() => {\n    if (!stop && !pause) {\n      if (countdown > 0) {\n        setTimeout(() => {\n          setCountdown(countdown - 1);\n          if (countdown % 999 === 0) {\n            saveTimerState();\n          }\n        }, 1);\n      } else if (restdown > 0) {\n        setTimeout(() => {\n          setRestdown(restdown - 1);\n          if (restdown % 999 === 0) {\n            saveTimerState();\n          }\n        }, 1);\n      } else if (countdown === 0 && restdown === 0 && currentRound < totalRound) {\n        setCurrentRound(currentRound + 1);\n        setCountdown(totalcountdown);\n        setRestdown(totalrestdown);\n        if (countdown % 999 === 0) {\n          saveTimerState();\n        }\n        if (restdown % 999 === 0) {\n          saveTimerState();\n        }\n      }\n    } else if (stop) {\n      setCountdown(0);\n      setRestdown(0);\n      setCurrentRound(0);\n      saveTimerState();\n    }\n\t}, [countdown, restdown, currentRound, start, pause, stop]);\n\n  const saveTimerState = () => {\n    if (timersReloaded) {\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      localStorageTimerState[index] = {\n        countdown: countdown,\n        restdown: restdown,\n        currentRound:currentRound,\n        start: start,\n        pause: pause,\n        stop: stop\n      };\n      localStorage.setItem('nkunduapp-timers-state', JSON.stringify(localStorageTimerState));\n      appNotify('timervalueupdated', {index: index});\n    }\n  }\n\n  const { appControl, appNotify, appTimerAction, appTimerIndex } = useContext(TimerContext);\n  useEffect(() => {\n    if (appTimerAction === 'Reset') {\n      handleTabataClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    } else if (appTimerIndex === index) {\n      handleTabataClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    }\n\t}, [appTimerAction, appTimerIndex]);\n\n  useEffect(() => {\n    if (countdown === 1 && restdown === 1 && currentRound === totalRound) {\n      appControl('Next');\n    }\n\t}, [countdown, restdown, currentRound]);\n\n  const handleTabataClick = (event) => {\n    let value = event.target.value;\n    if (value === 'Reset') {\n      setInputType('');\n      setCountdownValue(0);\n      setRestdownValue(0);\n      setRoundValue(0);\n      setCountdown(0);\n      setTotalCountdown(0);\n      setRestdown(0);\n      setTotalRestdown(0);\n      setCurrentRound(0);\n      setTotalRound(0);\n      setStart(false);\n      setStop(true);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Start') {\n      setCountdown(0);\n      setTotalCountdown(countdownValue);\n      setRestdown(0);\n      setTotalRestdown(restdownValue);\n      setCurrentRound(0);\n      setTotalRound(roundValue);\n      setStart(true);\n      setStop(false);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Stop') {\n      setStop(true);\n      setPauseButtonValue('Pause');\n    }  else if (value === 'Pause') {\n      setPause(true);\n      setPauseButtonValue('Resume');\n    }  else if (value === 'Resume') {\n      setPause(false);\n      setPauseButtonValue('Pause');\n    } else {\n      // Error\n    }\n  };\n\n  const handleNumberClick = (event) => {\n    if (inputType === 'Round') {\n      setRoundValue(Number(event.target.value));\n    } else if (inputType === 'Countdown') {\n      setCountdownValue((countdownValue * 10) + Number(event.target.value));\n    } else {\n      setRestdownValue((restdownValue * 10) + Number(event.target.value));\n    }\n  };\n\n  const handleInputTypeClick = (event) => {\n    setInputType(event.target.value);\n    let objInputTypeClassName = {\n      Countdown: 'btn btn-info',\n      Restdown: 'btn btn-info',\n      Round: 'btn btn-info'\n    }\n    objInputTypeClassName[event.target.value] = \"btn btn-primary\";\n    setInputTypeClassName(objInputTypeClassName);\n  };\n\n  const handleOnChangeDescription = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div>\n      <div>\n        <TextInput value={description} onChange={handleOnChangeDescription}/>\n      </div>\n      <div>\n        <DisplayTime milliseconds={countdown} uservalue={countdownValue}></DisplayTime>\n        <DisplayTime milliseconds={restdown} uservalue={restdownValue}></DisplayTime>\n        <DisplayRound round={currentRound} total={totalRound} uservalue={roundValue}></DisplayRound>\n      </div>\n      <div style={{ display: \"flex\"}}>\n        <Button displayName=\"Countdown\" value=\"Countdown\" className={inputTypeClassName.Countdown} onClick={handleInputTypeClick} />\n        <Button displayName=\"Restdown\" value=\"Restdown\" className={inputTypeClassName.Restdown} onClick={handleInputTypeClick} />\n        <Button displayName=\"Round\" value=\"Round\" className={inputTypeClassName.Round} onClick={handleInputTypeClick} />\n      </div>\n      <div style={{ display: \"flex\"}}>\n        <Numbers onClick={handleNumberClick} />\n      </div>\n      <div style={{ display: \"flex\"}}>\n        { controls === false ? null : <Controls onClick={handleTabataClick} valueStart=\"Start\" valuePause={pauseButtonValue} valueStop=\"Stop\" valueReset=\"Reset\"/> }\n      </div>\n    </div>\n  );\n};\n\nexport default Tabata;\n","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/Stopwatch.js",["293","294","295","296","297","298","299"],[],"import { useState, useEffect, useRef, useContext } from 'react';\n\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TextInput from \"../generic/TextInput\";\nimport Button from \"../generic/Button\";\nimport Numbers from \"../generic/Numbers\";\nimport Controls from \"../generic/Controls\";\n\nimport { TimerContext } from \"../../AppContext\";\n\nconst Stopwatch = ({controls, index}) => {\n  const [description, setDescription] = useState('');\n\n  const [stopwatch, setStopwatch] = useState(0);\n  const [countup, setCountup] = useState(0);\n\n  const [start, setStart] = useState(false);\n  const [pause, setPause] = useState(false);\n  const [stop, setStop] = useState(false);\n\n  const [pauseButtonValue, setPauseButtonValue] = useState('Pause');\n\n  const [stopwatchValue, setStopwatchValue] = useState(0);\n\n  const [timersReloaded, setTimersReloaded] = useState(false);\n  useEffect(() => {\n    if (timersReloaded === false) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      if (localStorageTimerConfig[index]) {\n        if (localStorageTimerConfig[index].description) {\n          setDescription(localStorageTimerConfig[index].description);\n        }\n\n        if (localStorageTimerConfig[index].stopwatchValue) {\n          setStopwatchValue(localStorageTimerConfig[index].stopwatchValue);\n        }\n      }\n\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      if (localStorageTimerState[index]) {\n        if (localStorageTimerState[index].stopwatch !== undefined) {\n          setStopwatch(localStorageTimerState[index].stopwatch);\n        }\n\n        if (localStorageTimerState[index].countup !== undefined) {\n          setCountup(localStorageTimerState[index].countup);\n        }\n\n        if (localStorageTimerState[index].start !== undefined) {\n          setStart(localStorageTimerState[index].start);\n        }\n\n        if (localStorageTimerState[index].stop !== undefined) {\n          setStop(localStorageTimerState[index].stop);\n        }\n\n        if (localStorageTimerState[index].pause !== undefined) {\n          setPause(localStorageTimerState[index].pause);\n        }\n      }\n      setTimersReloaded(true);\n    }\n  }, [timersReloaded]);\n\n  useEffect(() => {\n    if (timersReloaded) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      localStorageTimerConfig[index] = {\n        description: description,\n        stopwatchValue: stopwatchValue,\n        totalTime: stopwatchValue\n      };\n      localStorage.setItem('nkunduapp-timers-config', JSON.stringify(localStorageTimerConfig));\n    }\n    appNotify('timervalueupdated', {index: index});\n  }, [stopwatchValue, description]);\n\n  useEffect(() => {\n    if (!stop && !pause && countup <  stopwatch) {\n      setTimeout(() => {\n        setCountup(countup + 1);\n        if (countup % 999 === 0) {\n          saveTimerState();\n        }\n      }, 1);\n    } else if (stop) {\n      setCountup(0);\n      saveTimerState();\n    }\n\t}, [countup, stopwatch, start, pause, stop]);\n\n  const saveTimerState = () => {\n    if (timersReloaded) {\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      localStorageTimerState[index] = {\n        countup: countup,\n        stopwatch: stopwatch,\n        start: start,\n        pause: pause,\n        stop: stop\n      };\n      localStorage.setItem('nkunduapp-timers-state', JSON.stringify(localStorageTimerState));\n      appNotify('timervalueupdated', {index: index});\n    }\n  }\n\n  const { appControl, appNotify, appTimerAction, appTimerIndex } = useContext(TimerContext);\n  useEffect(() => {\n    if (appTimerAction === 'Reset') {\n      handleStopwatchClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    } else if (appTimerIndex === index) {\n      handleStopwatchClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    }\n\t}, [appTimerAction, appTimerIndex]);\n\n  useEffect(() => {\n    if (countup === stopwatch - 1) {\n      appControl('Next');\n    }\n\t}, [countup]);\n\n  const handleStopwatchClick = (event) => {\n    let value = event.target.value;\n    if (value === 'Reset') {\n      setStopwatchValue(0);\n      setCountup(0);\n      setStopwatch(0);\n      setStart(false);\n      setStop(true);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Start') {\n      setCountup(0);\n      setStopwatch(stopwatchValue);\n      setStart(true);\n      setStop(false);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Stop') {\n      setStop(true);\n      setPauseButtonValue('Pause');\n    }  else if (value === 'Pause') {\n      setPause(true);\n      setPauseButtonValue('Resume');\n    }  else if (value === 'Resume') {\n      setPause(false);\n      setPauseButtonValue('Pause');\n    } else {\n      // Error\n    }\n  };\n\n  const handleNumberClick = (event) => {\n    setStopwatchValue((stopwatchValue * 10) + Number(event.target.value));\n  };\n\n  const handleOnChangeDescription = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div>\n      <div>\n        <TextInput value={description} onChange={handleOnChangeDescription}/>\n      </div>\n      <div>\n        <DisplayTime milliseconds={countup} uservalue={stopwatchValue}></DisplayTime>\n      </div>\n      <div style={{ display: \"flex\"}}>\n        <Numbers onClick={handleNumberClick} />\n      </div>\n      <div style={{ display: \"flex\"}}>\n        {controls === false ? null : <Controls onClick={handleStopwatchClick} valueStart=\"Start\" valuePause={pauseButtonValue} valueStop=\"Stop\" valueReset=\"Reset\"/>}\n      </div>\n    </div>\n  );\n};\n\nexport default Stopwatch;\n","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/timers/Countdown.js",["300","301","302","303","304","305","306"],[],"import { useState, useEffect, useRef, useContext } from 'react';\n\nimport DisplayTime from \"../generic/DisplayTime\";\nimport TextInput from \"../generic/TextInput\";\nimport Button from \"../generic/Button\";\nimport Numbers from \"../generic/Numbers\";\nimport Controls from \"../generic/Controls\";\n\nimport { TimerContext } from \"../../AppContext\";\n\nconst Countdown = ({controls, index}) => {\n  const [description, setDescription] = useState('');\n\n  const [countdown, setCountdown] = useState(0);\n\n  const [start, setStart] = useState(false);\n  const [pause, setPause] = useState(false);\n  const [stop, setStop] = useState(false);\n\n  const [pauseButtonValue, setPauseButtonValue] = useState('Pause');\n\n  const [countdownValue, setCountdownValue] = useState(0);\n\n  const [timersReloaded, setTimersReloaded] = useState(false);\n  useEffect(() => {\n    if (timersReloaded === false) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      if (localStorageTimerConfig[index]) {\n        if(localStorageTimerConfig[index].description) {\n          setDescription(localStorageTimerConfig[index].description);\n        }\n\n        if(localStorageTimerConfig[index].countdownValue) {\n          setCountdownValue(localStorageTimerConfig[index].countdownValue);\n        }\n      }\n\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      if (localStorageTimerState[index]) {\n        if (localStorageTimerState[index].countdown !== undefined) {\n          setCountdown(localStorageTimerState[index].countdown);\n        }\n\n        if (localStorageTimerState[index].start !== undefined) {\n          setStart(localStorageTimerState[index].start);\n        }\n\n        if (localStorageTimerState[index].stop !== undefined) {\n          setStop(localStorageTimerState[index].stop);\n        }\n\n        if (localStorageTimerState[index].pause !== undefined) {\n          setPause(localStorageTimerState[index].pause);\n        }\n      }\n      setTimersReloaded(true);\n    }\n  }, [timersReloaded]);\n\n  useEffect(() => {\n    if (timersReloaded) {\n      const localStorageTimerConfig = localStorage.getItem('nkunduapp-timers-config') ? JSON.parse(localStorage.getItem('nkunduapp-timers-config')) : {};\n      localStorageTimerConfig[index] = {\n        description: description,\n        countdownValue: countdownValue,\n        totalTime: countdownValue\n      };\n      localStorage.setItem('nkunduapp-timers-config', JSON.stringify(localStorageTimerConfig));\n    }\n    appNotify('timervalueupdated', {index: index});\n  }, [countdownValue, description]);\n\n  useEffect(() => {\n    if (!stop && !pause && countdown > 0) {\n      setTimeout(() => {\n        setCountdown(countdown - 1);\n        if (countdown % 999 === 0) {\n          saveTimerState();\n        }\n      }, 1);\n    } else if (stop) {\n      setCountdown(0);\n      saveTimerState();\n    }\n\t}, [countdown, start, pause, stop]);\n\n  const saveTimerState = () => {\n    if (timersReloaded) {\n      const localStorageTimerState = localStorage.getItem('nkunduapp-timers-state') ? JSON.parse(localStorage.getItem('nkunduapp-timers-state')) : {};\n      localStorageTimerState[index] = {\n        countdown: countdown,\n        start: start,\n        pause: pause,\n        stop: stop\n      };\n      localStorage.setItem('nkunduapp-timers-state', JSON.stringify(localStorageTimerState));\n    }\n  }\n\n  const { appControl, appNotify, appTimerAction, appTimerIndex } = useContext(TimerContext);\n  useEffect(() => {\n    if (appTimerAction === 'Reset') {\n      handleCountdownClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    } else if (appTimerIndex === index) {\n      handleCountdownClick({\n        target: {\n          value: appTimerAction\n        }\n      });\n    }\n\t}, [appTimerAction, appTimerIndex]);\n\n  useEffect(() => {\n    if (countdown === 1) {\n      appControl('Next');\n    }\n\t}, [countdown]);\n\n  const handleCountdownClick = (event) => {\n    let value = event.target.value;\n    if (value === 'Reset') {\n      setCountdownValue(0);\n      setCountdown(0);\n      setStart(false);\n      setStop(true);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Start') {\n      setCountdown(countdownValue);\n      setStart(true);\n      setStop(false);\n      setPauseButtonValue('Pause');\n    } else if (value === 'Stop') {\n      setStop(true);\n      setPauseButtonValue('Pause');\n    }  else if (value === 'Pause') {\n      setPause(true);\n      setPauseButtonValue('Resume');\n    }  else if (value === 'Resume') {\n      setPause(false);\n      setPauseButtonValue('Pause');\n    } else {\n      // Error\n    }\n  };\n\n  const handleNumberClick = (event) => {\n    setCountdownValue((countdownValue * 10) + Number(event.target.value));\n  };\n\n  const handleOnChangeDescription = (event) => {\n    setDescription(event.target.value);\n  };\n\n  return (\n    <div>\n      <div>\n        <TextInput value={description} onChange={handleOnChangeDescription}/>\n      </div>\n      <div>\n        <DisplayTime milliseconds={countdown} uservalue={countdownValue}></DisplayTime>\n      </div>\n      <div style={{ display: \"flex\"}}>\n        <Numbers onClick={handleNumberClick} />\n      </div>\n      <div style={{ display: \"flex\"}}>\n        {controls === false ? null : <Controls onClick={handleCountdownClick} valueStart=\"Start\" valuePause={pauseButtonValue} valueStop=\"Stop\" valueReset=\"Reset\"/>}\n      </div>\n    </div>\n  );\n};\n\nexport default Countdown;\n","/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/TextInput.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/DisplayTime.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/Numbers.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/DisplayRound.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/generic/DisplayTotalTime.js",[],[],"/Users/nkundu/Downloads/Harvar_React/a3/ssh/assignment-3-kundu-me/src/components/history/HistoryComponent.js",[],[],{"ruleId":"307","severity":1,"message":"308","line":2,"column":10,"nodeType":"309","messageId":"310","endLine":2,"endColumn":18},{"ruleId":"307","severity":1,"message":"311","line":2,"column":20,"nodeType":"309","messageId":"310","endLine":2,"endColumn":29},{"ruleId":"312","severity":1,"message":"313","line":25,"column":6,"nodeType":"314","endLine":25,"endColumn":22,"suggestions":"315"},{"ruleId":"312","severity":1,"message":"316","line":31,"column":6,"nodeType":"314","endLine":31,"endColumn":21,"suggestions":"317"},{"ruleId":"307","severity":1,"message":"318","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":14},{"ruleId":"307","severity":1,"message":"311","line":4,"column":22,"nodeType":"309","messageId":"310","endLine":4,"endColumn":31},{"ruleId":"307","severity":1,"message":"319","line":18,"column":11,"nodeType":"309","messageId":"310","endLine":18,"endColumn":21},{"ruleId":"307","severity":1,"message":"320","line":1,"column":31,"nodeType":"309","messageId":"310","endLine":1,"endColumn":37},{"ruleId":"307","severity":1,"message":"321","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":14},{"ruleId":"312","severity":1,"message":"322","line":58,"column":6,"nodeType":"314","endLine":58,"endColumn":22,"suggestions":"323"},{"ruleId":"312","severity":1,"message":"324","line":69,"column":6,"nodeType":"314","endLine":69,"endColumn":35,"suggestions":"325"},{"ruleId":"312","severity":1,"message":"326","line":83,"column":5,"nodeType":"314","endLine":83,"endColumn":36,"suggestions":"327"},{"ruleId":"312","severity":1,"message":"328","line":113,"column":5,"nodeType":"314","endLine":113,"endColumn":36,"suggestions":"329"},{"ruleId":"312","severity":1,"message":"330","line":119,"column":5,"nodeType":"314","endLine":119,"endColumn":16,"suggestions":"331"},{"ruleId":"307","severity":1,"message":"320","line":1,"column":31,"nodeType":"309","messageId":"310","endLine":1,"endColumn":37},{"ruleId":"312","severity":1,"message":"322","line":84,"column":6,"nodeType":"314","endLine":84,"endColumn":22,"suggestions":"332"},{"ruleId":"312","severity":1,"message":"324","line":96,"column":6,"nodeType":"314","endLine":96,"endColumn":47,"suggestions":"333"},{"ruleId":"312","severity":1,"message":"334","line":121,"column":5,"nodeType":"314","endLine":121,"endColumn":50,"suggestions":"335"},{"ruleId":"312","severity":1,"message":"336","line":154,"column":5,"nodeType":"314","endLine":154,"endColumn":36,"suggestions":"337"},{"ruleId":"312","severity":1,"message":"338","line":160,"column":5,"nodeType":"314","endLine":160,"endColumn":30,"suggestions":"339"},{"ruleId":"307","severity":1,"message":"320","line":1,"column":31,"nodeType":"309","messageId":"310","endLine":1,"endColumn":37},{"ruleId":"307","severity":1,"message":"321","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":14},{"ruleId":"312","severity":1,"message":"322","line":63,"column":6,"nodeType":"314","endLine":63,"endColumn":22,"suggestions":"340"},{"ruleId":"312","severity":1,"message":"324","line":74,"column":6,"nodeType":"314","endLine":74,"endColumn":35,"suggestions":"341"},{"ruleId":"312","severity":1,"message":"326","line":88,"column":5,"nodeType":"314","endLine":88,"endColumn":45,"suggestions":"342"},{"ruleId":"312","severity":1,"message":"343","line":119,"column":5,"nodeType":"314","endLine":119,"endColumn":36,"suggestions":"344"},{"ruleId":"312","severity":1,"message":"345","line":125,"column":5,"nodeType":"314","endLine":125,"endColumn":14,"suggestions":"346"},{"ruleId":"307","severity":1,"message":"320","line":1,"column":31,"nodeType":"309","messageId":"310","endLine":1,"endColumn":37},{"ruleId":"312","severity":1,"message":"322","line":98,"column":6,"nodeType":"314","endLine":98,"endColumn":22,"suggestions":"347"},{"ruleId":"312","severity":1,"message":"324","line":111,"column":6,"nodeType":"314","endLine":111,"endColumn":62,"suggestions":"348"},{"ruleId":"312","severity":1,"message":"349","line":146,"column":5,"nodeType":"314","endLine":146,"endColumn":60,"suggestions":"350"},{"ruleId":"312","severity":1,"message":"351","line":178,"column":5,"nodeType":"314","endLine":178,"endColumn":36,"suggestions":"352"},{"ruleId":"312","severity":1,"message":"338","line":184,"column":5,"nodeType":"314","endLine":184,"endColumn":40,"suggestions":"353"},{"ruleId":"307","severity":1,"message":"354","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":17},{"ruleId":"307","severity":1,"message":"355","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":17},{"ruleId":"307","severity":1,"message":"356","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":10},{"ruleId":"307","severity":1,"message":"357","line":7,"column":8,"nodeType":"309","messageId":"310","endLine":7,"endColumn":14},{"ruleId":"307","severity":1,"message":"308","line":2,"column":10,"nodeType":"309","messageId":"310","endLine":2,"endColumn":18},{"ruleId":"307","severity":1,"message":"311","line":2,"column":20,"nodeType":"309","messageId":"310","endLine":2,"endColumn":29},{"ruleId":"312","severity":1,"message":"313","line":27,"column":6,"nodeType":"314","endLine":27,"endColumn":22,"suggestions":"358"},{"ruleId":"312","severity":1,"message":"359","line":34,"column":6,"nodeType":"314","endLine":34,"endColumn":21,"suggestions":"360"},{"ruleId":"307","severity":1,"message":"361","line":219,"column":11,"nodeType":"309","messageId":"310","endLine":219,"endColumn":22},{"ruleId":"307","severity":1,"message":"318","line":2,"column":8,"nodeType":"309","messageId":"310","endLine":2,"endColumn":14},{"ruleId":"307","severity":1,"message":"311","line":4,"column":22,"nodeType":"309","messageId":"310","endLine":4,"endColumn":31},{"ruleId":"307","severity":1,"message":"362","line":15,"column":112,"nodeType":"309","messageId":"310","endLine":15,"endColumn":121},{"ruleId":"307","severity":1,"message":"319","line":19,"column":11,"nodeType":"309","messageId":"310","endLine":19,"endColumn":21},{"ruleId":"307","severity":1,"message":"354","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":17},{"ruleId":"307","severity":1,"message":"355","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":17},{"ruleId":"307","severity":1,"message":"356","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":10},{"ruleId":"307","severity":1,"message":"357","line":7,"column":8,"nodeType":"309","messageId":"310","endLine":7,"endColumn":14},{"ruleId":"307","severity":1,"message":"320","line":1,"column":31,"nodeType":"309","messageId":"310","endLine":1,"endColumn":37},{"ruleId":"312","severity":1,"message":"322","line":84,"column":6,"nodeType":"314","endLine":84,"endColumn":22,"suggestions":"363"},{"ruleId":"312","severity":1,"message":"364","line":98,"column":6,"nodeType":"314","endLine":98,"endColumn":47,"suggestions":"365"},{"ruleId":"312","severity":1,"message":"334","line":123,"column":5,"nodeType":"314","endLine":123,"endColumn":50,"suggestions":"366"},{"ruleId":"312","severity":1,"message":"336","line":156,"column":5,"nodeType":"314","endLine":156,"endColumn":36,"suggestions":"367"},{"ruleId":"312","severity":1,"message":"338","line":162,"column":5,"nodeType":"314","endLine":162,"endColumn":30,"suggestions":"368"},{"ruleId":"307","severity":1,"message":"320","line":1,"column":31,"nodeType":"309","messageId":"310","endLine":1,"endColumn":37},{"ruleId":"312","severity":1,"message":"322","line":98,"column":6,"nodeType":"314","endLine":98,"endColumn":22,"suggestions":"369"},{"ruleId":"312","severity":1,"message":"364","line":113,"column":6,"nodeType":"314","endLine":113,"endColumn":62,"suggestions":"370"},{"ruleId":"312","severity":1,"message":"349","line":148,"column":5,"nodeType":"314","endLine":148,"endColumn":60,"suggestions":"371"},{"ruleId":"312","severity":1,"message":"351","line":181,"column":5,"nodeType":"314","endLine":181,"endColumn":36,"suggestions":"372"},{"ruleId":"312","severity":1,"message":"338","line":187,"column":5,"nodeType":"314","endLine":187,"endColumn":40,"suggestions":"373"},{"ruleId":"307","severity":1,"message":"320","line":1,"column":31,"nodeType":"309","messageId":"310","endLine":1,"endColumn":37},{"ruleId":"307","severity":1,"message":"321","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":14},{"ruleId":"312","severity":1,"message":"322","line":63,"column":6,"nodeType":"314","endLine":63,"endColumn":22,"suggestions":"374"},{"ruleId":"312","severity":1,"message":"364","line":76,"column":6,"nodeType":"314","endLine":76,"endColumn":35,"suggestions":"375"},{"ruleId":"312","severity":1,"message":"326","line":90,"column":5,"nodeType":"314","endLine":90,"endColumn":45,"suggestions":"376"},{"ruleId":"312","severity":1,"message":"343","line":122,"column":5,"nodeType":"314","endLine":122,"endColumn":36,"suggestions":"377"},{"ruleId":"312","severity":1,"message":"345","line":128,"column":5,"nodeType":"314","endLine":128,"endColumn":14,"suggestions":"378"},{"ruleId":"307","severity":1,"message":"320","line":1,"column":31,"nodeType":"309","messageId":"310","endLine":1,"endColumn":37},{"ruleId":"307","severity":1,"message":"321","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":14},{"ruleId":"312","severity":1,"message":"322","line":58,"column":6,"nodeType":"314","endLine":58,"endColumn":22,"suggestions":"379"},{"ruleId":"312","severity":1,"message":"364","line":71,"column":6,"nodeType":"314","endLine":71,"endColumn":35,"suggestions":"380"},{"ruleId":"312","severity":1,"message":"326","line":85,"column":5,"nodeType":"314","endLine":85,"endColumn":36,"suggestions":"381"},{"ruleId":"312","severity":1,"message":"328","line":115,"column":5,"nodeType":"314","endLine":115,"endColumn":36,"suggestions":"382"},{"ruleId":"312","severity":1,"message":"330","line":121,"column":5,"nodeType":"314","endLine":121,"endColumn":16,"suggestions":"383"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'reloadTimer'. Either include it or remove the dependency array.","ArrayExpression",["384"],"React Hook useEffect has missing dependencies: 'timers' and 'timersReloaded'. Either include them or remove the dependency array.",["385"],"'styled' is defined but never used.","'timerIndex' is assigned a value but never used.","'useRef' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array. If 'setDescription' needs the current value of 'index', you can also switch to useReducer instead of useState and read 'index' in the reducer.",["386"],"React Hook useEffect has missing dependencies: 'index' and 'timersReloaded'. Either include them or remove the dependency array.",["387"],"React Hook useEffect has a missing dependency: 'saveTimerState'. Either include it or remove the dependency array.",["388"],"React Hook useEffect has missing dependencies: 'handleCountdownClick' and 'index'. Either include them or remove the dependency array.",["389"],"React Hook useEffect has a missing dependency: 'appControl'. Either include it or remove the dependency array.",["390"],["391"],["392"],"React Hook useEffect has missing dependencies: 'saveTimerState', 'totalRound', and 'totalcountdown'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCountdown' needs the current value of 'totalcountdown'.",["393"],"React Hook useEffect has missing dependencies: 'handleXYClick' and 'index'. Either include them or remove the dependency array.",["394"],"React Hook useEffect has missing dependencies: 'appControl' and 'totalRound'. Either include them or remove the dependency array.",["395"],["396"],["397"],["398"],"React Hook useEffect has missing dependencies: 'handleStopwatchClick' and 'index'. Either include them or remove the dependency array.",["399"],"React Hook useEffect has missing dependencies: 'appControl' and 'stopwatch'. Either include them or remove the dependency array.",["400"],["401"],["402"],"React Hook useEffect has missing dependencies: 'saveTimerState', 'totalRound', 'totalcountdown', and 'totalrestdown'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCountdown' needs the current value of 'totalcountdown'.",["403"],"React Hook useEffect has missing dependencies: 'handleTabataClick' and 'index'. Either include them or remove the dependency array.",["404"],["405"],"'Stopwatch' is defined but never used.","'Countdown' is defined but never used.","'XY' is defined but never used.","'Tabata' is defined but never used.",["406"],"React Hook useEffect has missing dependencies: 'appNotify', 'timers', and 'timersReloaded'. Either include them or remove the dependency array.",["407"],"'timersState' is assigned a value but never used.","'appNotify' is assigned a value but never used.",["408"],"React Hook useEffect has missing dependencies: 'appNotify', 'index', and 'timersReloaded'. Either include them or remove the dependency array.",["409"],["410"],["411"],["412"],["413"],["414"],["415"],["416"],["417"],["418"],["419"],["420"],["421"],["422"],["423"],["424"],["425"],["426"],["427"],{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"438","fix":"439"},{"desc":"440","fix":"441"},{"desc":"432","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"432","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"432","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"428","fix":"469"},{"desc":"470","fix":"471"},{"desc":"432","fix":"472"},{"desc":"473","fix":"474"},{"desc":"445","fix":"475"},{"desc":"447","fix":"476"},{"desc":"449","fix":"477"},{"desc":"432","fix":"478"},{"desc":"479","fix":"480"},{"desc":"463","fix":"481"},{"desc":"465","fix":"482"},{"desc":"467","fix":"483"},{"desc":"432","fix":"484"},{"desc":"485","fix":"486"},{"desc":"454","fix":"487"},{"desc":"456","fix":"488"},{"desc":"458","fix":"489"},{"desc":"432","fix":"490"},{"desc":"491","fix":"492"},{"desc":"436","fix":"493"},{"desc":"438","fix":"494"},{"desc":"440","fix":"495"},"Update the dependencies array to be: [reloadTimer, timersReloaded]",{"range":"496","text":"497"},"Update the dependencies array to be: [timers, timersChanged, timersReloaded]",{"range":"498","text":"499"},"Update the dependencies array to be: [index, timersReloaded]",{"range":"500","text":"501"},"Update the dependencies array to be: [countdownValue, description, index, timersReloaded]",{"range":"502","text":"503"},"Update the dependencies array to be: [countdown, start, pause, stop, saveTimerState]",{"range":"504","text":"505"},"Update the dependencies array to be: [appTimerAction, appTimerIndex, handleCountdownClick, index]",{"range":"506","text":"507"},"Update the dependencies array to be: [appControl, countdown]",{"range":"508","text":"509"},{"range":"510","text":"501"},"Update the dependencies array to be: [description, countdownValue, roundValue, timersReloaded, index]",{"range":"511","text":"512"},"Update the dependencies array to be: [countdown, currentRound, start, pause, stop, totalRound, saveTimerState, totalcountdown]",{"range":"513","text":"514"},"Update the dependencies array to be: [appTimerAction, appTimerIndex, handleXYClick, index]",{"range":"515","text":"516"},"Update the dependencies array to be: [appControl, countdown, currentRound, totalRound]",{"range":"517","text":"518"},{"range":"519","text":"501"},"Update the dependencies array to be: [stopwatchValue, description, timersReloaded, index]",{"range":"520","text":"521"},"Update the dependencies array to be: [countup, stopwatch, start, pause, stop, saveTimerState]",{"range":"522","text":"523"},"Update the dependencies array to be: [appTimerAction, appTimerIndex, handleStopwatchClick, index]",{"range":"524","text":"525"},"Update the dependencies array to be: [appControl, countup, stopwatch]",{"range":"526","text":"527"},{"range":"528","text":"501"},"Update the dependencies array to be: [description, countdownValue, restdownValue, roundValue, timersReloaded, index]",{"range":"529","text":"530"},"Update the dependencies array to be: [countdown, restdown, currentRound, start, pause, stop, totalRound, saveTimerState, totalcountdown, totalrestdown]",{"range":"531","text":"532"},"Update the dependencies array to be: [appTimerAction, appTimerIndex, handleTabataClick, index]",{"range":"533","text":"534"},"Update the dependencies array to be: [countdown, restdown, currentRound, totalRound, appControl]",{"range":"535","text":"536"},{"range":"537","text":"497"},"Update the dependencies array to be: [appNotify, timers, timersChanged, timersReloaded]",{"range":"538","text":"539"},{"range":"540","text":"501"},"Update the dependencies array to be: [description, countdownValue, roundValue, timersReloaded, appNotify, index]",{"range":"541","text":"542"},{"range":"543","text":"514"},{"range":"544","text":"516"},{"range":"545","text":"518"},{"range":"546","text":"501"},"Update the dependencies array to be: [description, countdownValue, restdownValue, roundValue, timersReloaded, appNotify, index]",{"range":"547","text":"548"},{"range":"549","text":"532"},{"range":"550","text":"534"},{"range":"551","text":"536"},{"range":"552","text":"501"},"Update the dependencies array to be: [stopwatchValue, description, timersReloaded, appNotify, index]",{"range":"553","text":"554"},{"range":"555","text":"523"},{"range":"556","text":"525"},{"range":"557","text":"527"},{"range":"558","text":"501"},"Update the dependencies array to be: [appNotify, countdownValue, description, index, timersReloaded]",{"range":"559","text":"560"},{"range":"561","text":"505"},{"range":"562","text":"507"},{"range":"563","text":"509"},[785,801],"[reloadTimer, timersReloaded]",[934,949],"[timers, timersChanged, timersReloaded]",[2145,2161],"[index, timersReloaded]",[2595,2624],"[countdownValue, description, index, timersReloaded]",[2922,2953],"[countdown, start, pause, stop, saveTimerState]",[3804,3835],"[appTimerAction, appTimerIndex, handleCountdownClick, index]",[3922,3933],"[appControl, countdown]",[3184,3200],[3665,3706],"[description, countdownValue, roundValue, timersReloaded, index]",[4305,4350],"[countdown, currentRound, start, pause, stop, totalRound, saveTimerState, totalcountdown]",[5295,5326],"[appTimerAction, appTimerIndex, handleXYClick, index]",[5444,5469],"[appControl, countdown, currentRound, totalRound]",[2331,2347],[2781,2810],"[stopwatchValue, description, timersReloaded, index]",[3107,3147],"[countup, stopwatch, start, pause, stop, saveTimerState]",[4024,4055],"[appTimerAction, appTimerIndex, handleStopwatchClick, index]",[4152,4161],"[appControl, countup, stopwatch]",[3821,3837],[4340,4396],"[description, countdownValue, restdownValue, roundValue, timersReloaded, index]",[5313,5368],"[countdown, restdown, currentRound, start, pause, stop, totalRound, saveTimerState, totalcountdown, totalrestdown]",[6276,6307],"[appTimerAction, appTimerIndex, handleTabataClick, index]",[6443,6478],"[countdown, restdown, currentRound, totalRound, appControl]",[847,863],[1045,1060],"[appNotify, timers, timersChanged, timersReloaded]",[3184,3200],[3765,3806],"[description, countdownValue, roundValue, timersReloaded, appNotify, index]",[4405,4450],[5406,5437],[5555,5580],[3821,3837],[4459,4515],"[description, countdownValue, restdownValue, roundValue, timersReloaded, appNotify, index]",[5432,5487],[6460,6491],[6627,6662],[2331,2347],[2868,2897],"[stopwatchValue, description, timersReloaded, appNotify, index]",[3194,3234],[4176,4207],[4304,4313],[2145,2161],[2682,2711],"[appNotify, countdownValue, description, index, timersReloaded]",[3009,3040],[3902,3933],[4020,4031]]